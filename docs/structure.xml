<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="">
  <file path="application.php" hash="4f84fd6dc8752b9688afefb981e2793c" package="Bwork\Bwork">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <include line="34" type="Require Once" package="Default">
      <name>bwork/loader/libraryautoloader.php</name>
    </include>
    <include line="39" type="Require Once" package="Default">
      <name>bwork/loader/applicationautoloader.php</name>
    </include>
    <include line="59" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="98" type="Require Once" package="Default">
      <name>bwork/exception/handler.php</name>
    </include>
    <class final="false" abstract="false" namespace="global" line="22" package="Bwork\Bwork">
      <extends/>
      <name>Bwork_Application</name>
      <full_name>\Bwork_Application</full_name>
      <docblock line="12">
        <description>Application</description>
        <long-description>&lt;p&gt;This class contains system startup function that will not need saving in
the registry&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork"/>
        <tag line="12" name="version" description="v 0.4"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="32" package="Bwork\Bwork">
        <name>_initAutoloader</name>
        <full_name>_initAutoloader</full_name>
        <docblock line="25">
          <description>This function will require the autoloader class and initialize the object</description>
          <long-description/>
          <tag line="25" name="static" description=""/>
          <tag line="25" name="access" description="public"/>
          <tag line="25" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="54" package="Bwork\Bwork">
        <name>_initBootstrap</name>
        <full_name>_initBootstrap</full_name>
        <docblock line="45">
          <description>This will initialize the bootstrap files where the system bootstrap is used
for system processes and the normal bootstrap is called from the
application</description>
          <long-description/>
          <tag line="45" name="access" description="public"/>
          <tag line="45" name="static" description=""/>
          <tag line="45" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="68" package="Bwork\Bwork">
        <name>_initPreBootstrap</name>
        <full_name>_initPreBootstrap</full_name>
        <docblock line="64">
          <description>This function is a pre for _initBootstrap</description>
          <long-description/>
          <tag line="64" name="see" description="\Bwork_Application::_initBootstrap" refers="\Bwork_Application::_initBootstrap"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="81" package="Bwork\Bwork">
        <name>runTimeChecks</name>
        <full_name>runTimeChecks</full_name>
        <docblock line="73">
          <description>Attempts to perform some checks for a stable run of the framework</description>
          <long-description/>
          <tag line="73" name="access" description="public"/>
          <tag line="73" name="static" description=""/>
          <tag line="73" name="throws" description="" type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
          <tag line="73" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="96" package="Bwork\Bwork">
        <name>initExceptionHandler</name>
        <full_name>initExceptionHandler</full_name>
        <docblock line="89">
          <description>Attempts to set a handler for uncaught exceptions</description>
          <long-description/>
          <tag line="89" name="static" description=""/>
          <tag line="89" name="access" description="public"/>
          <tag line="89" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="110" package="Bwork\Bwork">
        <name>Run</name>
        <full_name>Run</full_name>
        <docblock line="103">
          <description>The main application function used to dispatch the project</description>
          <long-description/>
          <tag line="103" name="static" description=""/>
          <tag line="103" name="access" description="public"/>
          <tag line="103" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="130" package="Bwork\Bwork">
        <name>Dispatch</name>
        <full_name>Dispatch</full_name>
        <docblock line="124">
          <description>This function will ditpatch the framework with the initialized Router</description>
          <long-description/>
          <tag line="124" name="see" description="\Bwork_Application::Run" refers="\Bwork_Application::Run"/>
          <tag line="124" name="param" description="" type="\Bwork_Router_Router" variable="$router">
            <type by_reference="false">\Bwork_Router_Router</type>
          </tag>
          <tag line="124" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="130">
          <name>$router</name>
          <default/>
          <type>\Bwork_Router_Router</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="bootstrap\abstractbootstrap.php" hash="c083fd207ce1c1cfe92ef404057b7fa3" package="Bwork\Bwork\Bootstrap">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Bootstrap"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="24" package="Bwork\Bwork\Bootstrap">
      <extends/>
      <name>Bwork_Bootstrap_AbstractBootstrap</name>
      <full_name>\Bwork_Bootstrap_AbstractBootstrap</full_name>
      <docblock line="12">
        <description>AbstractBootstrap</description>
        <long-description>&lt;p&gt;This class will execute all class methods starting with _init from its
children and will when its return type equals an object add it to the
Registry.&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Bootstrap"/>
        <tag line="12" name="version" description="v 0.2"/>
        <tag line="12" name="abstract" description=""/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="Bwork\Bwork\Bootstrap">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="27">
          <description>The construction method that handles the class function</description>
          <long-description/>
          <tag line="27" name="access" description="public"/>
          <tag line="27" name="throws" description="" type="\Bwork_Bootstrap_Exception">
            <type by_reference="false">\Bwork_Bootstrap_Exception</type>
          </tag>
          <tag line="27" name="return" description="" type="\Bwork_Bootstrap_AbstractBootstrap">
            <type by_reference="false">\Bwork_Bootstrap_AbstractBootstrap</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="bootstrap\alias.php" hash="2096d951bddcee6bb8fe2aaf0c5718a4" package="Bwork\Bwork\Bootstrap">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Bootstrap"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="24" package="Bwork\Bwork\Bootstrap">
      <extends/>
      <name>Bwork_Bootstrap_Alias</name>
      <full_name>\Bwork_Bootstrap_Alias</full_name>
      <docblock line="12">
        <description>Alias</description>
        <long-description>&lt;p&gt;This class will is used when an object should be placed in the registry
under a different name than its standard, instead of returning an object
from a bootstrap return a Bootstrap_Alias.&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Bootstrap"/>
        <tag line="12" name="version" description="v 0.2"/>
        <tag line="12" name="abstract" description=""/>
      </docblock>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$name</name>
        <default/>
        <docblock line="27">
          <description>This will hold the Alias name of the object</description>
          <long-description/>
          <tag line="27" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="27" name="access" description="public"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="41" namespace="global" package="Default">
        <name>$object</name>
        <default/>
        <docblock line="35">
          <description>This will hold the object</description>
          <long-description/>
          <tag line="35" name="var" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="35" name="access" description="public"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="49" namespace="global" package="Default">
        <name>$override</name>
        <default/>
        <docblock line="43">
          <description>Holds information wether it should override or not</description>
          <long-description/>
          <tag line="43" name="var" description="Bwork_Core_Registry::NO_OVERRIDING||Bwork_Core_Registry::OVERRIDE" type="int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="43" name="access" description="public"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="60" package="Bwork\Bwork\Bootstrap">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="51">
          <description>This is the constructor function used to assign the alias name for its
object</description>
          <long-description/>
          <tag line="51" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="51" name="param" description="" type="object" variable="$object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="51" name="param" description="" type="int" variable="$override">
            <type by_reference="false">int</type>
          </tag>
          <tag line="51" name="return" description="" type="\Bwork_Bootstrap_Alias">
            <type by_reference="false">\Bwork_Bootstrap_Alias</type>
          </tag>
        </docblock>
        <argument line="60">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="60">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
        <argument line="60">
          <name>$override</name>
          <default>\Bwork_Core_Registry::NO_OVERRIDING</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="bootstrap\bootstrap.php" hash="01ffd0dac7108f73ae0e39031b745d19" package="Bwork\Bwork\Bootstrap">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Bootstrap"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="23" package="Bwork\Bwork\Bootstrap">
      <extends>\Bwork_Bootstrap_AbstractBootstrap</extends>
      <name>Bwork_Bootstrap_Bootstrap</name>
      <full_name>\Bwork_Bootstrap_Bootstrap</full_name>
      <docblock line="12">
        <description>Bootstrap</description>
        <long-description>&lt;p&gt;This class will initialize a few system processes that need saving in the
registry object and should therefore not be executed by the user.&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Bootstrap"/>
        <tag line="12" name="uses" description="\global\Bwork_Bootstrap_AbstractBootstrap" refers="\global\Bwork_Bootstrap_AbstractBootstrap"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Bwork\Bwork\Bootstrap">
        <name>_initHttpRequest</name>
        <full_name>_initHttpRequest</full_name>
        <docblock line="26">
          <description>This will create the Http Request object</description>
          <long-description/>
          <tag line="26" name="access" description="public"/>
          <tag line="26" name="return" description="" type="\Bwork_Http_Request">
            <type by_reference="false">\Bwork_Http_Request</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="Bwork\Bwork\Bootstrap">
        <name>_initHttpResponse</name>
        <full_name>_initHttpResponse</full_name>
        <docblock line="39">
          <description>This create the Http Response object</description>
          <long-description/>
          <tag line="39" name="access" description="public"/>
          <tag line="39" name="return" description="" type="\Bwork_Http_Response">
            <type by_reference="false">\Bwork_Http_Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="Bwork\Bwork\Bootstrap">
        <name>_initConfig</name>
        <full_name>_initConfig</full_name>
        <docblock line="52">
          <description>This will create the Config handler and assign default parsers.</description>
          <long-description/>
          <tag line="52" name="access" description="public"/>
          <tag line="52" name="return" description="" type="\Bwork_Config_Confighandler">
            <type by_reference="false">\Bwork_Config_Confighandler</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="Bwork\Bwork\Bootstrap">
        <name>_initRouter</name>
        <full_name>_initRouter</full_name>
        <docblock line="69">
          <description>This will create the router object and assign the default handler</description>
          <long-description/>
          <tag line="69" name="access" description="public"/>
          <tag line="69" name="return" description="" type="\Bwork_Router_Router">
            <type by_reference="false">\Bwork_Router_Router</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="bootstrap\exception.php" hash="07b395ffc5908f9875c9c1287851f463" package="Bwork\Bwork\Bootstrap">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Bootstrap"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\Bootstrap">
      <extends>\Exception</extends>
      <name>Bwork_Bootstrap_Exception</name>
      <full_name>\Bwork_Bootstrap_Exception</full_name>
      <docblock line="12">
        <description>Exception</description>
        <long-description>&lt;p&gt;Exception extender for Bootstrap exceptions&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Bootstrap"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
    </class>
  </file>
  <file path="config\confighandler.php" hash="79ff5cba6f79ef5a620834dc390a92d1" package="Bwork\Bwork\Config">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Config"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="true" abstract="false" namespace="global" line="22" package="Bwork\Bwork\Config">
      <extends>\ArrayObject</extends>
      <implements>\Bwork_config_Handler</implements>
      <name>Bwork_Config_Confighandler</name>
      <full_name>\Bwork_Config_Confighandler</full_name>
      <docblock line="12">
        <description>Config</description>
        <long-description>&lt;p&gt;This class stores all the config data.&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Config"/>
        <tag line="12" name="version" description="v 0.3"/>
        <tag line="12" name="final" description=""/>
      </docblock>
      <property final="false" static="false" visibility="private" line="33" namespace="global" package="Default">
        <name>$parsers</name>
        <default>array()</default>
        <docblock line="27">
          <description>This will hold all config parsers objects</description>
          <long-description/>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="27" name="access" description="private"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="Bwork\Bwork\Config">
        <name>loadFile</name>
        <full_name>loadFile</full_name>
        <docblock line="35">
          <description>Load file method</description>
          <long-description/>
          <tag line="35" name="see" description="\Bwork_Config_Handler::loadFile()" refers="\Bwork_Config_Handler::loadFile()"/>
          <tag line="35" name="param" description="" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="35" name="throws" description="" type="\Bwork_Config_Exception">
            <type by_reference="false">\Bwork_Config_Exception</type>
          </tag>
          <tag line="35" name="return" description="" type="\Bwork_Config_Confighandler">
            <type by_reference="false">\Bwork_Config_Confighandler</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="Bwork\Bwork\Config">
        <name>loadArray</name>
        <full_name>loadArray</full_name>
        <docblock line="62">
          <description>Load array method</description>
          <long-description/>
          <tag line="62" name="see" description="\Bwork_Config_Handler::loadArray()" refers="\Bwork_Config_Handler::loadArray()"/>
          <tag line="62" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="62" name="throws" description="" type="\Bwork_Config_Exception">
            <type by_reference="false">\Bwork_Config_Exception</type>
          </tag>
          <tag line="62" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$data</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="91" package="Bwork\Bwork\Config">
        <name>setParser</name>
        <full_name>setParser</full_name>
        <docblock line="82">
          <description>Will attempt to add the parser to the $parsers</description>
          <long-description/>
          <tag line="82" name="access" description="public"/>
          <tag line="82" name="param" description="" type="string" variable="$ext">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="param" description="" type="\Bwork_Config_Parser" variable="$parser">
            <type by_reference="false">\Bwork_Config_Parser</type>
          </tag>
          <tag line="82" name="throws" description="" type="\Bwork_Config_Exception">
            <type by_reference="false">\Bwork_Config_Exception</type>
          </tag>
          <tag line="82" name="return" description="" type="\Bwork_Config_Confighandler">
            <type by_reference="false">\Bwork_Config_Confighandler</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$ext</name>
          <default/>
          <type/>
        </argument>
        <argument line="91">
          <name>$parser</name>
          <default/>
          <type>\Bwork_Config_Parser</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="114" package="Bwork\Bwork\Config">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="106">
          <description>Magic method __set</description>
          <long-description/>
          <tag line="106" name="see" description="\Bwork_Config_Confighandler::set()" refers="\Bwork_Config_Confighandler::set()"/>
          <tag line="106" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="106" name="return" description="" type="\Bwork_Config_Confighandler">
            <type by_reference="false">\Bwork_Config_Confighandler</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="114">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="128" package="Bwork\Bwork\Config">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="119">
          <description>Will add the key-value arguments to $settings</description>
          <long-description/>
          <tag line="119" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="119" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="119" name="access" description="public"/>
          <tag line="119" name="throws" description="" type="\Bwork_Config_Exception">
            <type by_reference="false">\Bwork_Config_Exception</type>
          </tag>
          <tag line="119" name="return" description="" type="\Bwork_Config_Confighandler">
            <type by_reference="false">\Bwork_Config_Confighandler</type>
          </tag>
        </docblock>
        <argument line="128">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="128">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="146" package="Bwork\Bwork\Config">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="139">
          <description>Magic methods __get</description>
          <long-description/>
          <tag line="139" name="see" description="\Bwork_Config_Handler::get()" refers="\Bwork_Config_Handler::get()"/>
          <tag line="139" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="139" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="146">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="159" package="Bwork\Bwork\Config">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="151">
          <description>This method will return a specific setting</description>
          <long-description/>
          <tag line="151" name="see" description="\Bwork_Config_Handler::get()" refers="\Bwork_Config_Handler::get()"/>
          <tag line="151" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="151" name="throws" description="" type="\Bwork_Config_Exception">
            <type by_reference="false">\Bwork_Config_Exception</type>
          </tag>
          <tag line="151" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="159">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="175" package="Bwork\Bwork\Config">
        <name>exists</name>
        <full_name>exists</full_name>
        <docblock line="168">
          <description>This will check if a key is set in the storage</description>
          <long-description/>
          <tag line="168" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="168" name="access" description="public"/>
          <tag line="168" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="config\exception.php" hash="8901b75a64d2577ccea851d1fbb38198" package="Bwork\Bwork\Config">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Config"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\Config">
      <extends>\Exception</extends>
      <name>Bwork_Config_Exception</name>
      <full_name>\Bwork_Config_Exception</full_name>
      <docblock line="12">
        <description>Exception</description>
        <long-description>&lt;p&gt;Exception extender for Config exceptions&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Config"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
    </class>
  </file>
  <file path="config\handler.php" hash="1a492a7e0b0983afa99c3e2f18a9f926" package="Bwork\Bwork\Config">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Config"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <interface namespace="global" line="17" package="Bwork\Bwork\Config">
      <name>Bwork_Config_Handler</name>
      <full_name>\Bwork_Config_Handler</full_name>
      <docblock line="12">
        <description/>
        <long-description/>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Config"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Bwork\Bwork\Config">
        <name>loadFile</name>
        <full_name>loadFile</full_name>
        <docblock line="20">
          <description>This will check the file for it's file type and will check if there is an
handler set for this file type, and will on success parse this file and
merge its config data with the settings array</description>
          <long-description/>
          <tag line="20" name="access" description="public"/>
          <tag line="20" name="param" description="" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="20" name="throws" description="" type="\Bwork_Config_Exception">
            <type by_reference="false">\Bwork_Config_Exception</type>
          </tag>
          <tag line="20" name="return" description="" type="\Bwork_Config_Confighandler">
            <type by_reference="false">\Bwork_Config_Confighandler</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="Bwork\Bwork\Config">
        <name>loadArray</name>
        <full_name>loadArray</full_name>
        <docblock line="32">
          <description>This will attempt to merge the input data with the settings array</description>
          <long-description/>
          <tag line="32" name="access" description="public"/>
          <tag line="32" name="param" description="" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="32" name="throws" description="" type="\Bwork_Config_Exception">
            <type by_reference="false">\Bwork_Config_Exception</type>
          </tag>
          <tag line="32" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$data</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="Bwork\Bwork\Config">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="42">
          <description>Will retrieve a setting from Bwork_Config::$settings</description>
          <long-description/>
          <tag line="42" name="access" description="public"/>
          <tag line="42" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="throws" description="" type="\Bwork_Config_Exception">
            <type by_reference="false">\Bwork_Config_Exception</type>
          </tag>
          <tag line="42" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="config\parser\iniconfigparser.php" hash="c341a90a8aa38fa3dcac8d8c52d2a7e8" package="Bwork\Bwork\Config">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Config"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="true" abstract="false" namespace="global" line="22" package="Bwork\Bwork\Config">
      <extends/>
      <implements>\Bwork_Config_Parser</implements>
      <name>Bwork_Config_Parser_IniConfigParser</name>
      <full_name>\Bwork_Config_Parser_IniConfigParser</full_name>
      <docblock line="12">
        <description>IniConfigParser</description>
        <long-description>&lt;p&gt;A parser that will return its config vars in array format&lt;/p&gt;</long-description>
        <tag line="12" name="final" description=""/>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Config"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="Bwork\Bwork\Config">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="26">
          <description>Ini parse method</description>
          <long-description/>
          <tag line="26" name="see" description="\Bwork_Config_Parsers_IConfigParser::parse()" refers="\Bwork_Config_Parsers_IConfigParser::parse()"/>
          <tag line="26" name="param" description="" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="throws" description="" type="\Bwork_Config_Exception">
            <type by_reference="false">\Bwork_Config_Exception</type>
          </tag>
          <tag line="26" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="config\parser\phpconfigparser.php" hash="bc80bddfb86a5bf53686f5008f7baad5" package="Bwork\Bwork\Config">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Config"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <include line="44" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="true" abstract="false" namespace="global" line="22" package="Bwork\Bwork\Config">
      <extends/>
      <implements>\Bwork_Config_Parser</implements>
      <name>Bwork_Config_Parser_PHPConfigParser</name>
      <full_name>\Bwork_Config_Parser_PHPConfigParser</full_name>
      <docblock line="12">
        <description>PHPConfigParser</description>
        <long-description>&lt;p&gt;A parser that will return its config vars in array format&lt;/p&gt;</long-description>
        <tag line="12" name="final" description=""/>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Config"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="Bwork\Bwork\Config">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="26">
          <description>PHP parse method</description>
          <long-description/>
          <tag line="26" name="see" description="\Bwork_Config_Parsers_IConfigParser::parse()" refers="\Bwork_Config_Parsers_IConfigParser::parse()"/>
          <tag line="26" name="param" description="" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="throws" description="" type="\Bwork_Config_Exception">
            <type by_reference="false">\Bwork_Config_Exception</type>
          </tag>
          <tag line="26" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="config\parser\xmlconfigparser.php" hash="8821f18f9b91076fb6dad9db7bdd1947" package="Bwork\Bwork\Config">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Config"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="true" abstract="false" namespace="global" line="22" package="Bwork\Bwork\Config">
      <extends/>
      <implements>\Bwork_Config_Parser</implements>
      <name>Bwork_Config_Parser_XMLConfigParser</name>
      <full_name>\Bwork_Config_Parser_XMLConfigParser</full_name>
      <docblock line="12">
        <description>XMLConfigParser</description>
        <long-description>&lt;p&gt;A parser that will return its config vars in array format&lt;/p&gt;</long-description>
        <tag line="12" name="final" description=""/>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Config"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="Bwork\Bwork\Config">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="26">
          <description>XML parse method</description>
          <long-description/>
          <tag line="26" name="see" description="\Bwork_Config_Parsers_IConfigParser::parse()" refers="\Bwork_Config_Parsers_IConfigParser::parse()"/>
          <tag line="26" name="param" description="" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="throws" description="" type="\Bwork_Config_Exception">
            <type by_reference="false">\Bwork_Config_Exception</type>
          </tag>
          <tag line="26" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="config\parser.php" hash="9f8bf328d98bf6bfc7186811423b56ba" package="Bwork\Bwork\Config">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Config"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <interface namespace="global" line="17" package="Bwork\Bwork\Config">
      <name>Bwork_Config_Parser</name>
      <full_name>\Bwork_Config_Parser</full_name>
      <docblock line="12">
        <description/>
        <long-description/>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Config"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="Bwork\Bwork\Config">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="20">
          <description>Will parse the selected file and return its data in array format</description>
          <long-description/>
          <tag line="20" name="param" description="" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="20" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="controller\action.php" hash="be51c754614901b5a1e1fa9d1e0392ef" package="Bwork\Bwork\Controller">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Controller"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="23" package="Bwork\Bwork\Controller">
      <extends/>
      <name>Bwork_Controller_Action</name>
      <full_name>\Bwork_Controller_Action</full_name>
      <docblock line="12">
        <description>Action</description>
        <long-description>&lt;p&gt;This is a class supposed to be extended by a controller to inherit its
methods and get access to the Http Request and Http Response&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Controller"/>
        <tag line="12" name="version" description="v 0.1"/>
        <tag line="12" name="abstract" description=""/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="31" namespace="global" package="Default">
        <name>$request</name>
        <default/>
        <docblock line="26">
          <description>Hold the Http Request object</description>
          <long-description/>
          <tag line="26" name="var" description="" type="\Bwork_Http_Request">
            <type by_reference="false">\Bwork_Http_Request</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="global" package="Default">
        <name>$response</name>
        <default/>
        <docblock line="33">
          <description>Hold the http response Object</description>
          <long-description/>
          <tag line="33" name="var" description="" type="\Bwork_Http_Response">
            <type by_reference="false">\Bwork_Http_Response</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" namespace="global" package="Default">
        <name>$mockParams</name>
        <default/>
        <docblock line="40">
          <description>Hold the mock params set by a routing service</description>
          <long-description/>
          <tag line="40" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" namespace="global" package="Default">
        <name>$layoutEnabled</name>
        <default>true</default>
        <docblock line="47">
          <description>Hold the layout enabled setting</description>
          <long-description/>
          <tag line="47" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="62" package="Bwork\Bwork\Controller">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="55">
          <description>The construction method used to assign the Request and Response objects
to their variables</description>
          <long-description/>
          <tag line="55" name="access" description="public"/>
          <tag line="55" name="return" description="" type="\Bwork_Controller_Action">
            <type by_reference="false">\Bwork_Controller_Action</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="80" package="Bwork\Bwork\Controller">
        <name>setRequest</name>
        <full_name>setRequest</full_name>
        <docblock line="73">
          <description>This will set the Request variable</description>
          <long-description/>
          <tag line="73" name="param" description="" type="\Bwork_Http_Request" variable="$request">
            <type by_reference="false">\Bwork_Http_Request</type>
          </tag>
          <tag line="73" name="access" description="public"/>
          <tag line="73" name="return" description="" type="\Bwork_Controller_Action">
            <type by_reference="false">\Bwork_Controller_Action</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$request</name>
          <default/>
          <type>\Bwork_Http_Request</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="93" package="Bwork\Bwork\Controller">
        <name>getRequest</name>
        <full_name>getRequest</full_name>
        <docblock line="87">
          <description>This will return the request variable</description>
          <long-description/>
          <tag line="87" name="access" description="public"/>
          <tag line="87" name="return" description="" type="\Bwork_Http_Request">
            <type by_reference="false">\Bwork_Http_Request</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="105" package="Bwork\Bwork\Controller">
        <name>setResponse</name>
        <full_name>setResponse</full_name>
        <docblock line="98">
          <description>This will set the Response variable</description>
          <long-description/>
          <tag line="98" name="param" description="" type="\Bwork_Http_Response" variable="$response">
            <type by_reference="false">\Bwork_Http_Response</type>
          </tag>
          <tag line="98" name="access" description="public"/>
          <tag line="98" name="return" description="" type="\Bwork_Controller_Action">
            <type by_reference="false">\Bwork_Controller_Action</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$response</name>
          <default/>
          <type>\Bwork_Http_Response</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="Bwork\Bwork\Controller">
        <name>getResponse</name>
        <full_name>getResponse</full_name>
        <docblock line="112">
          <description>This will return the response variable</description>
          <long-description/>
          <tag line="112" name="access" description="public"/>
          <tag line="112" name="return" description="" type="\Bwork_Http_Response">
            <type by_reference="false">\Bwork_Http_Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="130" package="Bwork\Bwork\Controller">
        <name>setMockParams</name>
        <full_name>setMockParams</full_name>
        <docblock line="123">
          <description>This will set the mockParams from the Router</description>
          <long-description/>
          <tag line="123" name="param" description="" type="\Bwork_Router_Router" variable="$router">
            <type by_reference="false">\Bwork_Router_Router</type>
          </tag>
          <tag line="123" name="access" description="protected"/>
          <tag line="123" name="return" description="" type="\Bwork_Controller_Action">
            <type by_reference="false">\Bwork_Controller_Action</type>
          </tag>
        </docblock>
        <argument line="130">
          <name>$router</name>
          <default/>
          <type>\Bwork_Router_Router</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="145" package="Bwork\Bwork\Controller">
        <name>invoke</name>
        <full_name>invoke</full_name>
        <docblock line="137">
          <description>This will invoke an action</description>
          <long-description/>
          <tag line="137" name="param" description="" type="\Bwork_Router_Router" variable="$router">
            <type by_reference="false">\Bwork_Router_Router</type>
          </tag>
          <tag line="137" name="access" description="public"/>
          <tag line="137" name="throws" description="" type="\Bwork_Controller_Exception">
            <type by_reference="false">\Bwork_Controller_Exception</type>
          </tag>
          <tag line="137" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$router</name>
          <default/>
          <type>\Bwork_Router_Router</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="183" package="Bwork\Bwork\Controller">
        <name>handleString</name>
        <full_name>handleString</full_name>
        <docblock line="176">
          <description>This will handle a string return value retrieved from the action method</description>
          <long-description/>
          <tag line="176" name="param" description="" type="null|string" variable="$content">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="176" name="access" description="protected"/>
          <tag line="176" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="183">
          <name>$content</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="196" package="Bwork\Bwork\Controller">
        <name>handleView</name>
        <full_name>handleView</full_name>
        <docblock line="188">
          <description>This will handle the return data retrieved from the action method</description>
          <long-description/>
          <tag line="188" name="param" description="" type="\Bwork_View_View" variable="$view">
            <type by_reference="false">\Bwork_View_View</type>
          </tag>
          <tag line="188" name="throws" description="" type="\Bwork_Controller_Exception">
            <type by_reference="false">\Bwork_Controller_Exception</type>
          </tag>
          <tag line="188" name="access" description="protected"/>
          <tag line="188" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="196">
          <name>$view</name>
          <default/>
          <type>\Bwork_View_View</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="224" package="Bwork\Bwork\Controller">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="216">
          <description>Called when invoking on an undefined method</description>
          <long-description/>
          <tag line="216" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="216" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="216" name="throws" description="" type="\Bwork_Controller_Exception">
            <type by_reference="false">\Bwork_Controller_Exception</type>
          </tag>
          <tag line="216" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="224">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="224">
          <name>$arguments</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="controller\dispatcher.php" hash="7597475e3419eff1ddde4a757e9a69b8" package="Bwork\Bwork\Controller">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Controller"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <include line="63" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\Controller">
      <extends/>
      <name>Bwork_Controller_Dispatcher</name>
      <full_name>\Bwork_Controller_Dispatcher</full_name>
      <docblock line="12">
        <description>Dispatcher</description>
        <long-description>&lt;p&gt;This class attempts to dispatch a specific controller as gained by the router&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Controller"/>
        <tag line="12" name="version" description="v 0.4"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Bwork\Bwork\Controller">
        <name>dispatch</name>
        <full_name>dispatch</full_name>
        <docblock line="24">
          <description>This will dispatch a controller and will perform some checks to prevent
failing</description>
          <long-description/>
          <tag line="24" name="param" description="" type="\Bwork_Router_Router" variable="$router">
            <type by_reference="false">\Bwork_Router_Router</type>
          </tag>
          <tag line="24" name="throws" description="" type="\Bwork_Controller_Exception">
            <type by_reference="false">\Bwork_Controller_Exception</type>
          </tag>
          <tag line="24" name="access" description="public"/>
          <tag line="24" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$router</name>
          <default/>
          <type>\Bwork_Router_Router</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="controller\exception.php" hash="931cbbd6929196cabd8ae09447508431" package="Bwork\Bwork\Controller">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Controller"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\Controller">
      <extends>\Exception</extends>
      <name>Bwork_Controller_Exception</name>
      <full_name>\Bwork_Controller_Exception</full_name>
      <docblock line="12">
        <description>Exception</description>
        <long-description>&lt;p&gt;Exception extender for Controller exceptions&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Controller"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
    </class>
  </file>
  <file path="core\registry.php" hash="4790130a5bc27cec017a7def4c499aaf" package="Bwork\Bwork\Core">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Core"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\Core">
      <extends>\ArrayObject</extends>
      <name>Bwork_Core_Registry</name>
      <full_name>\Bwork_Core_Registry</full_name>
      <docblock line="12">
        <description>Registry</description>
        <long-description>&lt;p&gt;This will store objects and act like a singleton for every stored object&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Core"/>
        <tag line="12" name="version" description="v 0.4"/>
      </docblock>
      <constant namespace="global" line="23" package="Bwork\Bwork\Core">
        <name>NO_OVERRIDING</name>
        <full_name>NO_OVERRIDING</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="24" package="Bwork\Bwork\Core">
        <name>OVERRIDING</name>
        <full_name>OVERRIDING</full_name>
        <value>2</value>
      </constant>
      <property final="false" static="true" visibility="private" line="31" namespace="global" package="Default">
        <name>$instance</name>
        <default/>
        <docblock line="26">
          <description>Holds an instance of Bwork_Core_Registry</description>
          <long-description/>
          <tag line="26" name="var" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="40" package="Bwork\Bwork\Core">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="33">
          <description>Used to return an instance of the class</description>
          <long-description/>
          <tag line="33" name="access" description="public"/>
          <tag line="33" name="static" description=""/>
          <tag line="33" name="return" description="" type="\Bwork_Core_Registry">
            <type by_reference="false">\Bwork_Core_Registry</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="Bwork\Bwork\Core">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="49">
          <description>Magic method to retrieve a resource</description>
          <long-description/>
          <tag line="49" name="see" description="\Bwork_Core_Registry::getResource()" refers="\Bwork_Core_Registry::getResource()"/>
          <tag line="49" name="param" description="" type="string" variable="$class_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$class_name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="68" package="Bwork\Bwork\Core">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="61">
          <description>Magic method set, to set a resource</description>
          <long-description/>
          <tag line="61" name="see" description="()" refers="\Registry_Core_Registry::setResource"/>
          <tag line="61" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="param" description="" type="mixed" variable="$object">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="68">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="82" package="Bwork\Bwork\Core">
        <name>getResource</name>
        <full_name>getResource</full_name>
        <docblock line="73">
          <description>Used to retrieve an object from the array object Storage</description>
          <long-description/>
          <tag line="73" name="param" description="" type="\" variable="$class_name"/>
          <tag line="73" name="throws" description="" type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
          <tag line="73" name="internal" description="param string $key"/>
          <tag line="73" name="access" description="public"/>
          <tag line="73" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$class_name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="101" package="Bwork\Bwork\Core">
        <name>setResource</name>
        <full_name>setResource</full_name>
        <docblock line="91">
          <description>Used to add an object to the object array</description>
          <long-description/>
          <tag line="91" name="param" description="" type="object" variable="$object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="91" name="param" description="" type="string" variable="$alias">
            <type by_reference="false">string</type>
          </tag>
          <tag line="91" name="param" description="" type="int" variable="$override">
            <type by_reference="false">int</type>
          </tag>
          <tag line="91" name="throws" description="" type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
          <tag line="91" name="access" description="public"/>
          <tag line="91" name="return" description="" type="\Bwork_Core_Registry">
            <type by_reference="false">\Bwork_Core_Registry</type>
          </tag>
        </docblock>
        <argument line="101">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
        <argument line="101">
          <name>$alias</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="101">
          <name>$override</name>
          <default>self::NO_OVERRIDING</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="128" package="Bwork\Bwork\Core">
        <name>resourceExists</name>
        <full_name>resourceExists</full_name>
        <docblock line="121">
          <description>Checks if class name exists in Bwork_Core_Registry::$objects</description>
          <long-description/>
          <tag line="121" name="param" description="" type="string" variable="$class_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="121" name="access" description="public"/>
          <tag line="121" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="128">
          <name>$class_name</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="data\exception.php" hash="d6195950a639faa52f78eb208838eb4d" package="Bwork\Bwork\Data">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Data"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\Data">
      <extends>\Exception</extends>
      <name>Bwork_Data_Exception</name>
      <full_name>\Bwork_Data_Exception</full_name>
      <docblock line="12">
        <description>Exception</description>
        <long-description>&lt;p&gt;Exception extender for Data exceptions&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Data"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
    </class>
  </file>
  <file path="data\interface.php" hash="e1f9fefd9cd61728e4af4e031963606b" package="Bwork\Bwork\Data">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Data"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <interface namespace="global" line="18" package="Bwork\Bwork\Data">
      <name>Bwork_Data_Interface</name>
      <full_name>\Bwork_Data_Interface</full_name>
      <docblock line="12">
        <description/>
        <long-description/>
        <tag line="12" name="interface" description=""/>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Data"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="Bwork\Bwork\Data">
        <name>db</name>
        <full_name>db</full_name>
        <docblock line="21">
          <description>This is the main method and should always return an instance of self</description>
          <long-description/>
          <tag line="21" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="data\pdo.php" hash="811af23e5e3e4479b82d5aa87d008d51" package="Bwork\Bwork\Data">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Data"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="22" package="Bwork\Bwork\Data">
      <extends/>
      <implements>\Bwork_Data_Interface</implements>
      <name>Bwork_Data_PDO</name>
      <full_name>\Bwork_Data_PDO</full_name>
      <docblock line="12">
        <description>PDO</description>
        <long-description>&lt;p&gt;This class holds an connection with a MySQL Database via PDO&lt;/p&gt;</long-description>
        <tag line="12" name="abstract" description=""/>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Data"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="31" namespace="global" package="Default">
        <name>$db</name>
        <default/>
        <docblock line="25">
          <description>This will hold the PDO object</description>
          <long-description/>
          <tag line="25" name="var" description="" type="\PDO">
            <type by_reference="false">\PDO</type>
          </tag>
          <tag line="25" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="Bwork\Bwork\Data">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="33">
          <description>The construction method will attempt to establish a connection with the
MySQL database and stores itself in $db.</description>
          <long-description/>
          <tag line="33" name="access" description="public"/>
          <tag line="33" name="throws" description="" type="\Bwork_Data_Exception">
            <type by_reference="false">\Bwork_Data_Exception</type>
          </tag>
          <tag line="33" name="return" description="" type="\Bwork_Data_PDO">
            <type by_reference="false">\Bwork_Data_PDO</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="69" package="Bwork\Bwork\Data">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
        <docblock line="62">
          <description>Magic method automatically called just before destroying the object and
will unset PDO</description>
          <long-description/>
          <tag line="62" name="access" description="public"/>
          <tag line="62" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="80" package="Bwork\Bwork\Data">
        <name>db</name>
        <full_name>db</full_name>
        <docblock line="74">
          <description>The main function that will return the PDO class</description>
          <long-description/>
          <tag line="74" name="access" description="public"/>
          <tag line="74" name="return" description="" type="\PDO">
            <type by_reference="false">\PDO</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="exception\handler.php" hash="4754529eda9927501be9a6e651d3c9da" package="Bwork\Bwork\Exception">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Exception"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="22" package="Bwork\Bwork\Exception">
      <extends/>
      <name>Bwork_Exception_Handler</name>
      <full_name>\Bwork_Exception_Handler</full_name>
      <docblock line="12">
        <description>Handler</description>
        <long-description>&lt;p&gt;This class is used to handle thrown exception, the method onException is the main function
and is called when an exception has been thrown&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Exception"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="32" package="Bwork\Bwork\Exception">
        <name>onException</name>
        <full_name>onException</full_name>
        <docblock line="25">
          <description>This method is called when an exception has been thrown</description>
          <long-description/>
          <tag line="25" name="static" description=""/>
          <tag line="25" name="access" description="public"/>
          <tag line="25" name="param" description="" type="\Exception" variable="$exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="32">
          <name>$exception</name>
          <default/>
          <type>\Exception</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="helper\baseurl.php" hash="a0839f19094ea6c1b3e869b90e62660d" package="Bwork\Bwork\Helper">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Helper"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="27" package="Bwork\Bwork\Helper">
      <extends/>
      <name>Bwork_Helper_BaseUrl</name>
      <full_name>\Bwork_Helper_BaseUrl</full_name>
      <docblock line="12">
        <description>Base url</description>
        <long-description>&lt;p&gt;Base url can be called from a view or helper and can be used
as the following:&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; &lt;?php echo $this-&gt;baseUrl(string $url, boolean $ssl); ?&gt;
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Helper"/>
        <tag line="12" name="version" description="v 0.2"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="Bwork\Bwork\Helper">
        <name>baseUrl</name>
        <full_name>baseUrl</full_name>
        <docblock line="30">
          <description>Called by __call() at either a view or layout and is the main function of this helper</description>
          <long-description/>
          <tag line="30" name="access" description="public"/>
          <tag line="30" name="param" description="" type="String" variable="$uri">
            <type by_reference="false">String</type>
          </tag>
          <tag line="30" name="param" description="" type="Boolean" variable="$ssl">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="30" name="param" description="" type="Boolean" variable="$absolute">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="30" name="return" description="Generated base url" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$uri</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="39">
          <name>$ssl</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="39">
          <name>$absolute</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="helper\exception.php" hash="5fab313f691a7bf7b8bef598c1d626a8" package="Bwork\Bwork\Helper">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Helper"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\Helper">
      <extends>\Exception</extends>
      <name>Bwork_Helper_Exception</name>
      <full_name>\Bwork_Helper_Exception</full_name>
      <docblock line="12">
        <description>Exception</description>
        <long-description>&lt;p&gt;Exception extender for Helper exceptions&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Helper"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
    </class>
  </file>
  <file path="helper\handler.php" hash="0b72591765be2411b11e1e7eed0d34f5" package="Bwork\Bwork\Helper">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Helper"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <include line="116" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="23" package="Bwork\Bwork\Helper">
      <extends/>
      <name>Bwork_Helper_Handler</name>
      <full_name>\Bwork_Helper_Handler</full_name>
      <docblock line="12">
        <description>Handler</description>
        <long-description>&lt;p&gt;This class is used to handle helpers used in the view it will attempt to
check for an existing helper and execute its main function.&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Helper"/>
        <tag line="12" name="version" description="v 0.1"/>
        <tag line="12" name="static" description=""/>
      </docblock>
      <property final="false" static="true" visibility="protected" line="34" namespace="global" package="Default">
        <name>$namespaces</name>
        <default>array()</default>
        <docblock line="26">
          <description>This will hold all the registered namespaces where the key will be used
as path and the value as its class namespace</description>
          <long-description/>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="26" name="access" description="protected"/>
          <tag line="26" name="static" description=""/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="44" namespace="global" package="Default">
        <name>$helpers</name>
        <default>array()</default>
        <docblock line="36">
          <description>This will hold all the executed helpers this is a sort of cache where the
helpers are stored to prevent double loading</description>
          <long-description/>
          <tag line="36" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="36" name="access" description="protected"/>
          <tag line="36" name="static" description=""/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="56" package="Bwork\Bwork\Helper">
        <name>registerNamespace</name>
        <full_name>registerNamespace</full_name>
        <docblock line="46">
          <description>This will attempt to resolve the namespace its path and therefor add it
to the namespaces class variable</description>
          <long-description/>
          <tag line="46" name="param" description="" type="string" variable="$namespace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="throws" description="" type="\Bwork_Helper_Exception">
            <type by_reference="false">\Bwork_Helper_Exception</type>
          </tag>
          <tag line="46" name="static" description=""/>
          <tag line="46" name="access" description="public"/>
          <tag line="46" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$namespace</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="78" package="Bwork\Bwork\Helper">
        <name>checkPath</name>
        <full_name>checkPath</full_name>
        <docblock line="70">
          <description>This function will if a path exists</description>
          <long-description/>
          <tag line="70" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="access" description="public"/>
          <tag line="70" name="static" description=""/>
          <tag line="70" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="92" package="Bwork\Bwork\Helper">
        <name>retrieveHelper</name>
        <full_name>retrieveHelper</full_name>
        <docblock line="83">
          <description>This is the main function and will attempt to retrieve a helper</description>
          <long-description/>
          <tag line="83" name="param" description="" type="string" variable="$helper">
            <type by_reference="false">string</type>
          </tag>
          <tag line="83" name="throws" description="" type="\Bwork_Helper_Exception">
            <type by_reference="false">\Bwork_Helper_Exception</type>
          </tag>
          <tag line="83" name="access" description="public"/>
          <tag line="83" name="static" description=""/>
          <tag line="83" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="92">
          <name>$helper</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="112" package="Bwork\Bwork\Helper">
        <name>requireHelperFile</name>
        <full_name>requireHelperFile</full_name>
        <docblock line="103">
          <description>This will loop foreach namespace to check if a helper called from
self::retrieveHelper exists</description>
          <long-description/>
          <tag line="103" name="param" description="" type="string" variable="$helper">
            <type by_reference="false">string</type>
          </tag>
          <tag line="103" name="access" description="protected"/>
          <tag line="103" name="static" description=""/>
          <tag line="103" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="112">
          <name>$helper</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="138" package="Bwork\Bwork\Helper">
        <name>isAssigned</name>
        <full_name>isAssigned</full_name>
        <docblock line="129">
          <description>This function will check if a helper class is already stored in
self::$helpers</description>
          <long-description/>
          <tag line="129" name="param" description="" type="string" variable="$helper">
            <type by_reference="false">string</type>
          </tag>
          <tag line="129" name="access" description="protected"/>
          <tag line="129" name="static" description=""/>
          <tag line="129" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="138">
          <name>$helper</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="helper\testfunction.php" hash="075ba601505993d987252bfcba3385d1" package="Bwork\Bwork\Helper">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Helper"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\Helper">
      <extends/>
      <name>Bwork_Helper_TestFunction</name>
      <full_name>\Bwork_Helper_TestFunction</full_name>
      <docblock line="12">
        <description>TestFunction</description>
        <long-description>&lt;p&gt;This is a dummy Helper Function&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Helper"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="28" namespace="global" package="Default">
        <name>$var</name>
        <default/>
        <docblock line="23">
          <description>Var stores the string</description>
          <long-description/>
          <tag line="23" name="var" description="" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="35" package="Bwork\Bwork\Helper">
        <name>testFunction</name>
        <full_name>testFunction</full_name>
        <docblock line="30">
          <description>Test function which sets a string</description>
          <long-description/>
          <tag line="30" name="return" description="" type="\Bwork_Helper_TestFunction">
            <type by_reference="false">\Bwork_Helper_TestFunction</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="46" package="Bwork\Bwork\Helper">
        <name>rewrite</name>
        <full_name>rewrite</full_name>
        <docblock line="41">
          <description>Test function which rewrites string</description>
          <long-description/>
          <tag line="41" name="return" description="" type="\Bwork_Helper_TestFunction">
            <type by_reference="false">\Bwork_Helper_TestFunction</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="57" package="Bwork\Bwork\Helper">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="52">
          <description>Called on class to string</description>
          <long-description/>
          <tag line="52" name="return" description="" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="http\exception.php" hash="d787c930aecb7173dae9a9e727f19f9e" package="Bwork\Bwork\Http">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Http"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\Http">
      <extends>\Exception</extends>
      <name>Bwork_Http_Exception</name>
      <full_name>\Bwork_Http_Exception</full_name>
      <docblock line="12">
        <description>Exception</description>
        <long-description>&lt;p&gt;Exception extender for Http exceptions&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Http"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
    </class>
  </file>
  <file path="http\request.php" hash="53d2d73af4fd1468ed0e1ca75fbb08af" package="Bwork\Bwork\Http">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Http"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\Http">
      <extends/>
      <name>Bwork_Http_Request</name>
      <full_name>\Bwork_Http_Request</full_name>
      <docblock line="12">
        <description>Request</description>
        <long-description>&lt;p&gt;This class holds and handles the URI params&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Http"/>
        <tag line="12" name="version" description="v 0.2"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$uri</name>
        <default/>
        <docblock line="24">
          <description>Will hold the current URI in string format</description>
          <long-description/>
          <tag line="24" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="24" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="global" package="Default">
        <name>$params</name>
        <default/>
        <docblock line="32">
          <description>This wil hold the current URI params in array format</description>
          <long-description/>
          <tag line="32" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="32" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="46" namespace="global" package="Default">
        <name>$defaultBaseUri</name>
        <default/>
        <docblock line="40">
          <description>This will hold the sub url of the framework.</description>
          <long-description/>
          <tag line="40" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="40" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="Bwork\Bwork\Http">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="48">
          <description>The construction method will handle the current URI and add the string
format to self::$uri and explode on a '/' and will add the params to
self::$params</description>
          <long-description/>
          <tag line="48" name="access" description="public"/>
          <tag line="48" name="return" description="" type="\Bwork_Http_Request">
            <type by_reference="false">\Bwork_Http_Request</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="Bwork\Bwork\Http">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="73">
          <description>This function can be used to create URLs from URIs additionally it can be
set to use https or http prefix</description>
          <long-description/>
          <tag line="73" name="param" description="" type="String" variable="$uri">
            <type by_reference="false">String</type>
          </tag>
          <tag line="73" name="param" description="" type="Boolean" variable="$ssl">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="73" name="param" description="" type="Boolean" variable="$absolute">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="73" name="access" description="public"/>
          <tag line="73" name="return" description="generated Url" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$uri</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="83">
          <name>$ssl</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="83">
          <name>$absolute</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="Bwork\Bwork\Http">
        <name>getParams</name>
        <full_name>getParams</full_name>
        <docblock line="94">
          <description>This method is used to retrieve all params</description>
          <long-description/>
          <tag line="94" name="param" description="" type="String" variable="$param">
            <type by_reference="false">String</type>
          </tag>
          <tag line="94" name="return" description="Bwork_Http_Request::Params" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$param</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="Bwork\Bwork\Http">
        <name>getParam</name>
        <full_name>getParam</full_name>
        <docblock line="109">
          <description>This method is used to retrieve a param</description>
          <long-description/>
          <tag line="109" name="access" description="public"/>
          <tag line="109" name="param" description="" type="string" variable="$param">
            <type by_reference="false">string</type>
          </tag>
          <tag line="109" name="param" description="" type="string" variable="$default">
            <type by_reference="false">string</type>
          </tag>
          <tag line="109" name="throws" description="" type="\Bwork_Http_Exception">
            <type by_reference="false">\Bwork_Http_Exception</type>
          </tag>
          <tag line="109" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$param</name>
          <default/>
          <type/>
        </argument>
        <argument line="118">
          <name>$default</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="137" package="Bwork\Bwork\Http">
        <name>getArgs</name>
        <full_name>getArgs</full_name>
        <docblock line="131">
          <description>This method is used to retrieve all args in associative format</description>
          <long-description/>
          <tag line="131" name="access" description="public"/>
          <tag line="131" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="162" package="Bwork\Bwork\Http">
        <name>getArg</name>
        <full_name>getArg</full_name>
        <docblock line="153">
          <description>This method is used to retrieve an argument</description>
          <long-description/>
          <tag line="153" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="153" name="param" description="" type="string" variable="$default">
            <type by_reference="false">string</type>
          </tag>
          <tag line="153" name="throws" description="" type="\Bwork_Http_Exception">
            <type by_reference="false">\Bwork_Http_Exception</type>
          </tag>
          <tag line="153" name="access" description="public"/>
          <tag line="153" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="162">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="162">
          <name>$default</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="190" package="Bwork\Bwork\Http">
        <name>countParams</name>
        <full_name>countParams</full_name>
        <docblock line="184">
          <description>Used to retrieve value of params</description>
          <long-description/>
          <tag line="184" name="access" description="public"/>
          <tag line="184" name="return" description="Counted parameters" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="202" package="Bwork\Bwork\Http">
        <name>post</name>
        <full_name>post</full_name>
        <docblock line="195">
          <description>This method is used to retrieve post data</description>
          <long-description/>
          <tag line="195" name="access" description="public"/>
          <tag line="195" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="195" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="202">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="218" package="Bwork\Bwork\Http">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="211">
          <description>The method is used to retrieve get data</description>
          <long-description/>
          <tag line="211" name="access" description="public"/>
          <tag line="211" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="211" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="218">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="233" package="Bwork\Bwork\Http">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="227">
          <description>This method is used to retrieve the put data</description>
          <long-description/>
          <tag line="227" name="access" description="public"/>
          <tag line="227" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="244" package="Bwork\Bwork\Http">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="238">
          <description>Used to retrieve the url as a string</description>
          <long-description/>
          <tag line="238" name="access" description="public"/>
          <tag line="238" name="return" description="Bwork_Http_Request::Params" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="http\response.php" hash="c7ec7c8a89abb7cf34746885a06a76d0" package="Bwork\Bwork\Http">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Http"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\Http">
      <extends/>
      <name>Bwork_Http_Response</name>
      <full_name>\Bwork_Http_Response</full_name>
      <docblock line="12">
        <description>Response</description>
        <long-description>&lt;p&gt;This class will handle the response of the framework.&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Http"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="31" namespace="global" package="Default">
        <name>$body</name>
        <default/>
        <docblock line="24">
          <description>This will hold all the content assigned from the dispatcher which
retrieves its data from a controller</description>
          <long-description/>
          <tag line="24" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="24" name="access" description="public"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="global" package="Default">
        <name>$statusCode</name>
        <default>200</default>
        <docblock line="33">
          <description>This will hold a status code possible set in a controller its default
value is 200</description>
          <long-description/>
          <tag line="33" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="33" name="access" description="public"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="48" namespace="global" package="Default">
        <name>$statusMessage</name>
        <default>'OK'</default>
        <docblock line="42">
          <description>This will hold the status message possible set in a controller its
default value is 'OK'</description>
          <long-description/>
          <tag line="42" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="57" namespace="global" package="Default">
        <name>$response</name>
        <default>array(100 =&gt; 'Continue', 101 =&gt; 'Switching Protocol', 200 =&gt; 'OK', 201 =&gt; 'Created', 202 =&gt; 'Accepted', 203 =&gt; 'Non-Authoritative Information', 204 =&gt; 'No Content', 205 =&gt; 'Reset Content', 206 =&gt; 'Partial Content', 300 =&gt; 'Multiple Choice', 301 =&gt; 'Moved Permanently', 302 =&gt; 'Found', 303 =&gt; 'See Other', 304 =&gt; 'Not Modified', 305 =&gt; 'Use Proxy', 306 =&gt; 'unused', 307 =&gt; 'Temporary Redirect', 308 =&gt; 'Permanent Redirect', 400 =&gt; 'Bad Request', 401 =&gt; 'Unauthorized ', 402 =&gt; 'Payment Required', 403 =&gt; 'Forbidden', 404 =&gt; 'Not Found', 405 =&gt; 'Method Not Allowed', 406 =&gt; 'Not Acceptable', 407 =&gt; 'Proxy Authentication Required', 408 =&gt; 'Request Timeout', 409 =&gt; 'Conflict', 410 =&gt; 'Gone', 411 =&gt; 'Length Required', 412 =&gt; 'Precondition Failed', 415 =&gt; 'Unsupported Media', 416 =&gt; 'Requested Range', 417 =&gt; 'Expectation Failed', 500 =&gt; 'Internal Server Error', 501 =&gt; 'Not Implemented', 502 =&gt; 'Bad Gateway', 503 =&gt; 'Service Unavailable', 504 =&gt; 'Gateway Timeout', 505 =&gt; 'HTTP Version Not Supported')</default>
        <docblock line="50">
          <description>This is een array with possible header statuses that will be used in the
set status function</description>
          <long-description/>
          <tag line="50" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="50" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="106" package="Bwork\Bwork\Http">
        <name>setBody</name>
        <full_name>setBody</full_name>
        <docblock line="100">
          <description>This method is used to set the content ready for output</description>
          <long-description/>
          <tag line="100" name="param" description="" type="mixed" variable="$content">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="100" name="return" description="" type="\Bwork_Http_Response">
            <type by_reference="false">\Bwork_Http_Response</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="123" package="Bwork\Bwork\Http">
        <name>setStatus</name>
        <full_name>setStatus</full_name>
        <docblock line="113">
          <description>This function will attempt to set a status for the header information it
is possible to choose from the predefined array.</description>
          <long-description/>
          <tag line="113" name="param" description="" type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="113" name="param" description="" type="string" variable="$description">
            <type by_reference="false">string</type>
          </tag>
          <tag line="113" name="throws" description="" type="\Bwork_Http_Exception">
            <type by_reference="false">\Bwork_Http_Exception</type>
          </tag>
          <tag line="113" name="access" description="public"/>
          <tag line="113" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$code</name>
          <default/>
          <type/>
        </argument>
        <argument line="123">
          <name>$description</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="145" package="Bwork\Bwork\Http">
        <name>outputStatus</name>
        <full_name>outputStatus</full_name>
        <docblock line="138">
          <description>This will essentially use the status code and message to output header
information and echo the content.</description>
          <long-description/>
          <tag line="138" name="access" description="public"/>
          <tag line="138" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="layout\default.php" hash="f9cc56b28c75ce6bf7437ac848fbb851" package="Bwork\Bwork\Layout">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Layout"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <include line="153" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="35" package="Bwork\Bwork\Layout">
      <extends/>
      <implements>\Bwork_Layout_Layout</implements>
      <name>Bwork_Layout_Default</name>
      <full_name>\Bwork_Layout_Default</full_name>
      <docblock line="12">
        <description>Default</description>
        <long-description>&lt;p&gt;This class is used to create a specific wrapper around your regular view
templates. This should be used to set returning layouts where you normally
would include a header and footer. Note that a layout file should atleast
have one line of specific coding.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;&lt;/head&gt;
&lt;body&gt;
 &lt;?php echo $this-&gt;content; ?&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Layout"/>
        <tag line="12" name="version" description="v 0.2"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="44" namespace="global" package="Default">
        <name>$layout</name>
        <default/>
        <docblock line="38">
          <description>This will hold the layout template</description>
          <long-description/>
          <tag line="38" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" namespace="global" package="Default">
        <name>$variables</name>
        <default>array()</default>
        <docblock line="46">
          <description>This will hold all variables</description>
          <long-description/>
          <tag line="46" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="46" name="access" description="public"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="60" namespace="global" package="Default">
        <name>$content</name>
        <default/>
        <docblock line="54">
          <description>This will hold the content retrieved from a possible view template</description>
          <long-description/>
          <tag line="54" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="54" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="72" package="Bwork\Bwork\Layout">
        <name>setLayout</name>
        <full_name>setLayout</full_name>
        <docblock line="62">
          <description>This method will attempt to set the layout variable and perform some
checks before doing so</description>
          <long-description/>
          <tag line="62" name="param" description="" type="string" variable="$layout">
            <type by_reference="false">string</type>
          </tag>
          <tag line="62" name="param" description="" type="null" variable="$module">
            <type by_reference="false">null</type>
          </tag>
          <tag line="62" name="access" description="public"/>
          <tag line="62" name="throws" description="" type="\Bwork_Layout_Exception">
            <type by_reference="false">\Bwork_Layout_Exception</type>
          </tag>
          <tag line="62" name="return" description="" type="\Bwork_Layout_Default">
            <type by_reference="false">\Bwork_Layout_Default</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$layout</name>
          <default/>
          <type/>
        </argument>
        <argument line="72">
          <name>$module</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="112" package="Bwork\Bwork\Layout">
        <name>getLayout</name>
        <full_name>getLayout</full_name>
        <docblock line="106">
          <description>This will return the current layout</description>
          <long-description/>
          <tag line="106" name="access" description="public"/>
          <tag line="106" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="124" package="Bwork\Bwork\Layout">
        <name>setContent</name>
        <full_name>setContent</full_name>
        <docblock line="117">
          <description>This will set the content variable</description>
          <long-description/>
          <tag line="117" name="param" description="" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="117" name="access" description="public"/>
          <tag line="117" name="return" description="" type="\Bwork_Layout_Default">
            <type by_reference="false">\Bwork_Layout_Default</type>
          </tag>
        </docblock>
        <argument line="124">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="137" package="Bwork\Bwork\Layout">
        <name>getContent</name>
        <full_name>getContent</full_name>
        <docblock line="131">
          <description>This will return the current content</description>
          <long-description/>
          <tag line="131" name="access" description="public"/>
          <tag line="131" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="149" package="Bwork\Bwork\Layout">
        <name>fetch</name>
        <full_name>fetch</full_name>
        <docblock line="142">
          <description>This will include the layout file which therefore should have added
possible view layout content</description>
          <long-description/>
          <tag line="142" name="access" description="public"/>
          <tag line="142" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="167" package="Bwork\Bwork\Layout">
        <name>display</name>
        <full_name>display</full_name>
        <docblock line="161">
          <description>This will immediately attempt to display the layout template file</description>
          <long-description/>
          <tag line="161" name="access" description="public"/>
          <tag line="161" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="179" package="Bwork\Bwork\Layout">
        <name>mergeVariables</name>
        <full_name>mergeVariables</full_name>
        <docblock line="172">
          <description>This will merge set in the view with the layout variables</description>
          <long-description/>
          <tag line="172" name="param" description="" type="array" variable="$variables">
            <type by_reference="false">array</type>
          </tag>
          <tag line="172" name="access" description="public"/>
          <tag line="172" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$variables</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="192" package="Bwork\Bwork\Layout">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="184">
          <description>This is the magic method used to retrieve assigned variables set in the
variables variable</description>
          <long-description/>
          <tag line="184" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="184" name="access" description="public"/>
          <tag line="184" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="192">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="207" package="Bwork\Bwork\Layout">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="197">
          <description>This is the magic method used when a undefined method is called
this will try to retrieve a helper for this function and execute the
helper</description>
          <long-description/>
          <tag line="197" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="197" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="197" name="access" description="public"/>
          <tag line="197" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="207">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="207">
          <name>$arguments</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="layout\exception.php" hash="46458b4ae06243f86b072faf1c66478a" package="Bwork\Bwork\Layout">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Layout"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\Layout">
      <extends>\Exception</extends>
      <name>Bwork_Layout_Exception</name>
      <full_name>\Bwork_Layout_Exception</full_name>
      <docblock line="12">
        <description>Exception</description>
        <long-description>&lt;p&gt;Exception extender for Layout exceptions&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Layout"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
    </class>
  </file>
  <file path="layout\layout.php" hash="3aa7c8904ebed8d153defac20764de1c" package="Bwork\Bwork\Layout">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Layout"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <interface namespace="global" line="21" package="Bwork\Bwork\Layout">
      <name>Bwork_Layout_Layout</name>
      <full_name>\Bwork_Layout_Layout</full_name>
      <docblock line="12">
        <description>Default</description>
        <long-description>&lt;p&gt;This class is used to handle regular layout templates&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Layout"/>
        <tag line="12" name="version" description="v 0.2"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Bwork\Bwork\Layout">
        <name>setLayout</name>
        <full_name>setLayout</full_name>
        <docblock line="24">
          <description>This method will attempt to set a layout template</description>
          <long-description/>
          <tag line="24" name="param" description="" type="string" variable="$layout">
            <type by_reference="false">string</type>
          </tag>
          <tag line="24" name="param" description="" type="null" variable="$module">
            <type by_reference="false">null</type>
          </tag>
          <tag line="24" name="access" description="public"/>
          <tag line="24" name="return" description="" type="\Bwork_Layout_Default">
            <type by_reference="false">\Bwork_Layout_Default</type>
          </tag>
        </docblock>
        <argument line="32">
          <name>$layout</name>
          <default/>
          <type/>
        </argument>
        <argument line="32">
          <name>$module</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="Bwork\Bwork\Layout">
        <name>getLayout</name>
        <full_name>getLayout</full_name>
        <docblock line="34">
          <description>This will return the current layout</description>
          <long-description/>
          <tag line="34" name="access" description="public"/>
          <tag line="34" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Bwork\Bwork\Layout">
        <name>setContent</name>
        <full_name>setContent</full_name>
        <docblock line="42">
          <description>This will set the content variable</description>
          <long-description/>
          <tag line="42" name="param" description="" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="access" description="public"/>
          <tag line="42" name="return" description="" type="\Bwork_Layout_Default">
            <type by_reference="false">\Bwork_Layout_Default</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="57" package="Bwork\Bwork\Layout">
        <name>getContent</name>
        <full_name>getContent</full_name>
        <docblock line="51">
          <description>This will return the current content</description>
          <long-description/>
          <tag line="51" name="access" description="public"/>
          <tag line="51" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="Bwork\Bwork\Layout">
        <name>fetch</name>
        <full_name>fetch</full_name>
        <docblock line="59">
          <description>This will include the layout file which therefore should have added
possible view layout content</description>
          <long-description/>
          <tag line="59" name="access" description="public"/>
          <tag line="59" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="Bwork\Bwork\Layout">
        <name>mergeVariables</name>
        <full_name>mergeVariables</full_name>
        <docblock line="68">
          <description>This will merge set in the view with the layout variables</description>
          <long-description/>
          <tag line="68" name="param" description="" type="array" variable="$variables">
            <type by_reference="false">array</type>
          </tag>
          <tag line="68" name="access" description="public"/>
          <tag line="68" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$variables</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
    </interface>
  </file>
  <file path="loader\applicationautoloader.php" hash="117591a173e13f1b329e3b3b9a238530" package="Bwork\Bwork\Loader">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Loader"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <include line="12" type="Require Once" package="Default">
      <name>bwork/loader/autoloader.php</name>
    </include>
    <include line="13" type="Require Once" package="Default">
      <name>bwork/loader/exception.php</name>
    </include>
    <include line="81" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="88" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="24" package="Bwork\Bwork\Loader">
      <extends/>
      <implements>\Bwork_Loader_Autoloader</implements>
      <name>Bwork_Loader_ApplicationAutoloader</name>
      <full_name>\Bwork_Loader_ApplicationAutoloader</full_name>
      <docblock line="14">
        <description>ApplicationAutoloader</description>
        <long-description>&lt;p&gt;This autoloader attempts to load the given class, but is only capable of loading
either models or value objects.&lt;/p&gt;</long-description>
        <tag line="14" name="package" description="Bwork"/>
        <tag line="14" name="subpackage" description="Bwork_Loader"/>
        <tag line="14" name="version" description="v 0.3"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="37" package="Bwork\Bwork\Loader">
        <name>autoload</name>
        <full_name>autoload</full_name>
        <docblock line="27">
          <description>Main method for loading Models and ValueObject</description>
          <long-description/>
          <tag line="27" name="see" description="\Bwork_Loader_Interface::autoload()" refers="\Bwork_Loader_Interface::autoload()"/>
          <tag line="27" name="access" description="public"/>
          <tag line="27" name="static" description=""/>
          <tag line="27" name="param" description="" type="string" variable="$className">
            <type by_reference="false">string</type>
          </tag>
          <tag line="27" name="throws" description="" type="\Bwork_Loader_Exception">
            <type by_reference="false">\Bwork_Loader_Exception</type>
          </tag>
          <tag line="27" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$className</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="68" package="Bwork\Bwork\Loader">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="56">
          <description>This method attempts to locate and load a file based on its type
and will give higher priority to modules and fallback on normal
Models or Value objects</description>
          <long-description/>
          <tag line="56" name="access" description="public"/>
          <tag line="56" name="static" description=""/>
          <tag line="56" name="param" description="" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="param" description="model|vo" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="throws" description="" type="\Bwork_Loader_Exception">
            <type by_reference="false">\Bwork_Loader_Exception</type>
          </tag>
          <tag line="56" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
        <argument line="68">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="106" package="Bwork\Bwork\Loader">
        <name>fileExists</name>
        <full_name>fileExists</full_name>
        <docblock line="98">
          <description>This methods will perform checks if the given file exists and is readable</description>
          <long-description/>
          <tag line="98" name="access" description="public"/>
          <tag line="98" name="static" description=""/>
          <tag line="98" name="param" description="" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="98" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="loader\autoloader.php" hash="d5697b90c26868bd027371b5315e4369" package="Bwork\Bwork\Loader">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Loader"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <interface namespace="global" line="21" package="Bwork\Bwork\Loader">
      <name>Bwork_Loader_Autoloader</name>
      <full_name>\Bwork_Loader_Autoloader</full_name>
      <docblock line="12">
        <description>Interface</description>
        <long-description>&lt;p&gt;The interface for an autoloader&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Loader"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="32" package="Bwork\Bwork\Loader">
        <name>autoload</name>
        <full_name>autoload</full_name>
        <docblock line="23">
          <description>This is the main method which attempts to resolve the correct path and file name
and attempts to require this file.</description>
          <long-description/>
          <tag line="23" name="access" description="public"/>
          <tag line="23" name="static" description=""/>
          <tag line="23" name="param" description="" type="string" variable="$className">
            <type by_reference="false">string</type>
          </tag>
          <tag line="23" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="32">
          <name>$className</name>
          <default/>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="loader\exception.php" hash="2818dc09c3f4b69219dae80c3e48f926" package="Bwork\Bwork\Loader">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Loader"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\Loader">
      <extends>\Exception</extends>
      <name>Bwork_Loader_Exception</name>
      <full_name>\Bwork_Loader_Exception</full_name>
      <docblock line="12">
        <description>Exception</description>
        <long-description>&lt;p&gt;Exception extender for autoload exceptions&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Loader"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
    </class>
  </file>
  <file path="loader\libraryautoloader.php" hash="341c1d057182e42285b924e9ce95fee5" package="Bwork\Bwork\Loader">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Loader"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <include line="12" type="Require Once" package="Default">
      <name>bwork/loader/autoloader.php</name>
    </include>
    <include line="41" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="47" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="23" package="Bwork\Bwork\Loader">
      <extends/>
      <implements>\Bwork_Loader_Autoloader</implements>
      <name>Bwork_Loader_LibraryAutoloader</name>
      <full_name>\Bwork_Loader_LibraryAutoloader</full_name>
      <docblock line="13">
        <description>LibraryAutoloader</description>
        <long-description>&lt;p&gt;This autoloader attempts to load the given class, but is only capable of loading
files within a library.&lt;/p&gt;</long-description>
        <tag line="13" name="package" description="Bwork"/>
        <tag line="13" name="subpackage" description="Bwork_Loader"/>
        <tag line="13" name="version" description="v 0.2"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="35" package="Bwork\Bwork\Loader">
        <name>autoload</name>
        <full_name>autoload</full_name>
        <docblock line="26">
          <description>Main method for loading library files</description>
          <long-description/>
          <tag line="26" name="see" description="\Bwork_Loader_Interface::autoload()" refers="\Bwork_Loader_Interface::autoload()"/>
          <tag line="26" name="access" description="public"/>
          <tag line="26" name="static" description=""/>
          <tag line="26" name="param" description="" type="string" variable="$className">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$className</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="63" package="Bwork\Bwork\Loader">
        <name>fileExists</name>
        <full_name>fileExists</full_name>
        <docblock line="53">
          <description>This method is used to check if a file exist within the library folder and
is used before relying on the include paths.</description>
          <long-description>&lt;p&gt;Allot of servers don't allow
you to attempt a file_exists command on pre initialized include paths.&lt;/p&gt;</long-description>
          <tag line="53" name="access" description="public"/>
          <tag line="53" name="static" description=""/>
          <tag line="53" name="param" description="" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="module\exception.php" hash="bad3ead9c730456ed88a603f040ef190" package="Bwork\Bwork\Module">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Module"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\Module">
      <extends>\Exception</extends>
      <name>Bwork_Module_Exception</name>
      <full_name>\Bwork_Module_Exception</full_name>
      <docblock line="12">
        <description>Exception</description>
        <long-description>&lt;p&gt;Exception extender for autoload exceptions&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Module"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
    </class>
  </file>
  <file path="module\manager.php" hash="fbc29bb66566d28cb6f088178b488c12" package="Bwork\Bwork\Module">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Module"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <include line="124" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\Module">
      <extends/>
      <implements>\Bwork_Module_Module</implements>
      <name>Bwork_Module_Manager</name>
      <full_name>\Bwork_Module_Manager</full_name>
      <docblock line="12">
        <description>Manager</description>
        <long-description>&lt;p&gt;This class is used to control module loading and getting&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Module"/>
        <tag line="12" name="version" description="v 0.2"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$modules</name>
        <default>array()</default>
        <docblock line="24">
          <description>Will hold all the loaded modules</description>
          <long-description/>
          <tag line="24" name="access" description="protected"/>
          <tag line="24" name="var" description="" type="Array">
            <type by_reference="false">Array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="Bwork\Bwork\Module">
        <name>addModules</name>
        <full_name>addModules</full_name>
        <docblock line="32">
          <description>This method can be used to add a series of modules</description>
          <long-description/>
          <tag line="32" name="access" description="public"/>
          <tag line="32" name="param" description="" type="array" variable="$modules">
            <type by_reference="false">array</type>
          </tag>
          <tag line="32" name="throws" description="" type="\Bwork_Module_Exception">
            <type by_reference="false">\Bwork_Module_Exception</type>
          </tag>
          <tag line="32" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$modules</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="59" package="Bwork\Bwork\Module">
        <name>addModule</name>
        <full_name>addModule</full_name>
        <docblock line="51">
          <description>This method can be used to add a single module</description>
          <long-description/>
          <tag line="51" name="access" description="public"/>
          <tag line="51" name="param" description="" type="String" variable="$moduleName">
            <type by_reference="false">String</type>
          </tag>
          <tag line="51" name="throws" description="" type="\Bwork_Module_Exception">
            <type by_reference="false">\Bwork_Module_Exception</type>
          </tag>
          <tag line="51" name="return" description="" type="\Bwork_Module_Manager">
            <type by_reference="false">\Bwork_Module_Manager</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$moduleName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="77" package="Bwork\Bwork\Module">
        <name>moduleExists</name>
        <full_name>moduleExists</full_name>
        <docblock line="70">
          <description>This method can be used to check if a module had yet been initialized</description>
          <long-description/>
          <tag line="70" name="access" description="public"/>
          <tag line="70" name="param" description="" type="string" variable="$moduleName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$moduleName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="88" package="Bwork\Bwork\Module">
        <name>getModules</name>
        <full_name>getModules</full_name>
        <docblock line="82">
          <description>This method is used to retrieved initialized modules</description>
          <long-description/>
          <tag line="82" name="access" description="public"/>
          <tag line="82" name="return" description="$modules" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="Bwork\Bwork\Module">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="92">
          <description>This will check the module files are ready and attempts to run the bootstrap</description>
          <long-description/>
          <tag line="92" name="access" description="public"/>
          <tag line="92" name="param" description="" type="String" variable="$moduleName">
            <type by_reference="false">String</type>
          </tag>
          <tag line="92" name="throws" description="" type="\Bwork_Module_Exception">
            <type by_reference="false">\Bwork_Module_Exception</type>
          </tag>
          <tag line="92" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$moduleName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="module\module.php" hash="dcbdc35259b0263838b5e41ea3216006" package="Bwork\Bwork\Module">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Module"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <interface namespace="global" line="21" package="Bwork\Bwork\Module">
      <name>Bwork_Module_Module</name>
      <full_name>\Bwork_Module_Module</full_name>
      <docblock line="12">
        <description>Interface</description>
        <long-description>&lt;p&gt;The interface for module managers&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Module"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="Bwork\Bwork\Module">
        <name>addModule</name>
        <full_name>addModule</full_name>
        <docblock line="24">
          <description>Method used to load a single module</description>
          <long-description/>
          <tag line="24" name="abstract" description=""/>
          <tag line="24" name="param" description="" type="string" variable="$moduleName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="24" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$moduleName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="Bwork\Bwork\Module">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="33">
          <description>Method used to initialize a loaded module</description>
          <long-description/>
          <tag line="33" name="abstract" description=""/>
          <tag line="33" name="param" description="" type="string" variable="$moduleName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="33" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$moduleName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="router\exception.php" hash="a1875932423ee261be40eab9181c37ad" package="Bwork\Bwork\Router">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Router"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\Router">
      <extends>\Exception</extends>
      <name>Bwork_Router_Exception</name>
      <full_name>\Bwork_Router_Exception</full_name>
      <docblock line="12">
        <description>Exception</description>
        <long-description>&lt;p&gt;Exception extender for router exceptions&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Router"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
    </class>
  </file>
  <file path="router\handler\default.php" hash="fc03eafae52204c6e6b563a17602f4e6" package="Bwork\Bwork\Router\Handler">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Router_Handler"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="true" abstract="false" namespace="global" line="22" package="Bwork\Bwork\Router\Handler">
      <extends/>
      <implements>\Bwork_Router_Handler</implements>
      <name>Bwork_Router_Handler_Default</name>
      <full_name>\Bwork_Router_Handler_Default</full_name>
      <docblock line="12">
        <description>Default</description>
        <long-description>&lt;p&gt;This class is a handler for the router and will attempt to resolve routes via
the config class&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Router_Handler"/>
        <tag line="12" name="version" description="v 0.2"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$route</name>
        <default/>
        <docblock line="26">
          <description>Will store the route with the parameters gained when resolving a route</description>
          <long-description/>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="26" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="Bwork\Bwork\Router\Handler">
        <name>checkRoute</name>
        <full_name>checkRoute</full_name>
        <docblock line="34">
          <description>Will check if a route is set for this uri</description>
          <long-description/>
          <tag line="34" name="see" description="\Bwork_Router_Handler_Interface::checkRoute()" refers="\Bwork_Router_Handler_Interface::checkRoute()"/>
          <tag line="34" name="param" description="" type="array" variable="$uri">
            <type by_reference="false">array</type>
          </tag>
          <tag line="34" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$uri</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="Bwork\Bwork\Router\Handler">
        <name>getParams</name>
        <full_name>getParams</full_name>
        <docblock line="65">
          <description>Will return the resolved Params used for dispatching</description>
          <long-description/>
          <tag line="65" name="see" description="\Bwork_Router_Handler::getParams()" refers="\Bwork_Router_Handler::getParams()"/>
          <tag line="65" name="return" description="" type="\Bwork_Router_Route">
            <type by_reference="false">\Bwork_Router_Route</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="router\handler\module.php" hash="b63a2166ab20d6ed26d2157879ccd668" package="Bwork\Bwork\Router\Handler">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Router_Handler"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="true" abstract="false" namespace="global" line="21" package="Bwork\Bwork\Router\Handler">
      <extends/>
      <implements>\Bwork_Router_Handler</implements>
      <name>Bwork_Router_Handler_Module</name>
      <full_name>\Bwork_Router_Handler_Module</full_name>
      <docblock line="12">
        <description>Module</description>
        <long-description>&lt;p&gt;A Router handler which will check if the segments match a module&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Router_Handler"/>
        <tag line="12" name="version" description="v 0.3"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="31" namespace="global" package="Default">
        <name>$route</name>
        <default/>
        <docblock line="25">
          <description>Will store the route with the parameters gained when resolving a route</description>
          <long-description/>
          <tag line="25" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="25" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="Bwork\Bwork\Router\Handler">
        <name>checkRoute</name>
        <full_name>checkRoute</full_name>
        <docblock line="33">
          <description>Will check if a route is set for this uri</description>
          <long-description/>
          <tag line="33" name="see" description="\Bwork_Router_Handler_Interface::checkRoute()" refers="\Bwork_Router_Handler_Interface::checkRoute()"/>
          <tag line="33" name="param" description="" type="array" variable="$uri">
            <type by_reference="false">array</type>
          </tag>
          <tag line="33" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$uri</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="Bwork\Bwork\Router\Handler">
        <name>getParams</name>
        <full_name>getParams</full_name>
        <docblock line="69">
          <description>Will return the resolved Params used for dispatching</description>
          <long-description/>
          <tag line="69" name="see" description="\Bwork_Router_Handler::getParams()" refers="\Bwork_Router_Handler::getParams()"/>
          <tag line="69" name="return" description="" type="\Bwork_Router_Route">
            <type by_reference="false">\Bwork_Router_Route</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="router\handler\subpath.php" hash="be5fba42099c632b22df4fb6a5843cb7" package="Bwork\Bwork\Router\Handler">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Router_Handler"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="true" abstract="false" namespace="global" line="24" package="Bwork\Bwork\Router\Handler">
      <extends/>
      <implements>\Bwork_Router_Handler</implements>
      <name>Bwork_Router_Handler_SubPath</name>
      <full_name>\Bwork_Router_Handler_SubPath</full_name>
      <docblock line="12">
        <description>SubPath</description>
        <long-description>&lt;p&gt;A Router handler which will check if the segments match a subdirectory
within the controller folder and will change its controller and action
based on that information.&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Router_Handler"/>
        <tag line="12" name="version" description="v 0.1"/>
        <tag line="12" name="deprecated" description=""/>
      </docblock>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$params</name>
        <default/>
        <docblock line="28">
          <description>Will store the parameter gained when resolving a route</description>
          <long-description/>
          <tag line="28" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Bwork\Bwork\Router\Handler">
        <name>checkRoute</name>
        <full_name>checkRoute</full_name>
        <docblock line="35">
          <description>Will check if a route is set for this uri\</description>
          <long-description/>
          <tag line="35" name="see" description="\Bwork_Router_Handler_Interface::checkRoute()" refers="\Bwork_Router_Handler_Interface::checkRoute()"/>
          <tag line="35" name="param" description="" type="array" variable="$uri">
            <type by_reference="false">array</type>
          </tag>
          <tag line="35" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$uri</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="Bwork\Bwork\Router\Handler">
        <name>resolveParams</name>
        <full_name>resolveParams</full_name>
        <docblock line="77">
          <description>Will attempt to resolve the controller file and action method
from the url params.</description>
          <long-description/>
          <tag line="77" name="param" description="" type="array" variable="$url">
            <type by_reference="false">array</type>
          </tag>
          <tag line="77" name="param" description="From which item the subPaths stops" type="int" variable="$from">
            <type by_reference="false">int</type>
          </tag>
          <tag line="77" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$url</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="85">
          <name>$from</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="99" package="Bwork\Bwork\Router\Handler">
        <name>getParams</name>
        <full_name>getParams</full_name>
        <docblock line="93">
          <description>Will return the resolved Params used for dispatching</description>
          <long-description/>
          <tag line="93" name="see" description="\Bwork_Router_Handler_Interface::getParams()" refers="\Bwork_Router_Handler_Interface::getParams()"/>
          <tag line="93" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="router\handler.php" hash="9c331a08c2a8a98c3c6a2273c6a33585" package="Bwork\Bwork\Router">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Router"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <interface namespace="global" line="21" package="Bwork\Bwork\Router">
      <name>Bwork_Router_Handler</name>
      <full_name>\Bwork_Router_Handler</full_name>
      <docblock line="12">
        <description>Interface</description>
        <long-description>&lt;p&gt;The interface for Route handlers&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Router"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Bwork\Bwork\Router">
        <name>checkRoute</name>
        <full_name>checkRoute</full_name>
        <docblock line="24">
          <description>Will attempt to resolve if there is a specified route set for parameter $url</description>
          <long-description/>
          <tag line="24" name="param" description="" type="array" variable="$uri">
            <type by_reference="false">array</type>
          </tag>
          <tag line="24" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$uri</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="48" package="Bwork\Bwork\Router">
        <name>getParams</name>
        <full_name>getParams</full_name>
        <docblock line="32">
          <description>Will return the controller/action/module/mockparams parameters in object format
this method will only get called when checkRoute returns true.</description>
          <long-description>&lt;p&gt;Either return
a Bwork_Router_Route- or StdClass object.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;return Bwork_Router_Route(
 'Controllername',
 'ActionName',
 'modulename'
 array(1, 2)
);
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="32" name="return" description="" type="\Bwork_Router_Route">
            <type by_reference="false">\Bwork_Router_Route</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="router\route.php" hash="c91f8be157a0ec7d11fd749730713643" package="Bwork\Bwork\Router">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Router"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\Route">
      <extends/>
      <name>Bwork_Router_Route</name>
      <full_name>\Bwork_Router_Route</full_name>
      <docblock line="12">
        <description>Route</description>
        <long-description>&lt;p&gt;This class is used to store a route&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Route"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="30" namespace="global" package="Default">
        <name>$controller</name>
        <default/>
        <docblock line="24">
          <description>This var holds the controller name for the route</description>
          <long-description/>
          <tag line="24" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="24" name="access" description="public"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="38" namespace="global" package="Default">
        <name>$action</name>
        <default/>
        <docblock line="32">
          <description>This var holds the action name for the route</description>
          <long-description/>
          <tag line="32" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="32" name="access" description="public"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="46" namespace="global" package="Default">
        <name>$module</name>
        <default/>
        <docblock line="40">
          <description>This var holds a initialized module name</description>
          <long-description/>
          <tag line="40" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="40" name="access" description="public"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="54" namespace="global" package="Default">
        <name>$mockParams</name>
        <default/>
        <docblock line="48">
          <description>This var holds possible mockParams which can be accessed from an action</description>
          <long-description/>
          <tag line="48" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="48" name="access" description="public"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="Bwork\Bwork\Route">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="56">
          <description>This is the constructor method used to assign vars used in a route</description>
          <long-description/>
          <tag line="56" name="param" description="" type="string" variable="$controller">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="param" description="" type="string" variable="$action">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="param" description="" type="string" variable="$module">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="param" description="" type="array" variable="$mockParams">
            <type by_reference="false">array</type>
          </tag>
          <tag line="56" name="access" description="public"/>
          <tag line="56" name="return" description="" type="\Bwork_Router_Route">
            <type by_reference="false">\Bwork_Router_Route</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$controller</name>
          <default/>
          <type/>
        </argument>
        <argument line="66">
          <name>$action</name>
          <default/>
          <type/>
        </argument>
        <argument line="66">
          <name>$module</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="66">
          <name>$mockParams</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="router\router.php" hash="9e8790cc4bc8a6a99411de8cea56015a" package="Bwork\Bwork\Router">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Router"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="23" package="Bwork\Bwork\Router">
      <extends/>
      <name>Bwork_Router_Router</name>
      <full_name>\Bwork_Router_Router</full_name>
      <docblock line="12">
        <description>Router</description>
        <long-description>&lt;p&gt;This class will attempt te resolve the right controller and action used for
dispatching. It is possible to add handlers that will check a route each on
its own way&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Router"/>
        <tag line="12" name="version" description="v 0.2"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$handlers</name>
        <default>array()</default>
        <docblock line="26">
          <description>Holds all the routing handler</description>
          <long-description/>
          <tag line="26" name="access" description="protected"/>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="global" package="Default">
        <name>$controller</name>
        <default/>
        <docblock line="34">
          <description>Will hold the controller value</description>
          <long-description/>
          <tag line="34" name="access" description="public"/>
          <tag line="34" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="47" namespace="global" package="Default">
        <name>$action</name>
        <default/>
        <docblock line="41">
          <description>Will hold the action value</description>
          <long-description/>
          <tag line="41" name="access" description="public"/>
          <tag line="41" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="55" namespace="global" package="Default">
        <name>$mockParams</name>
        <default/>
        <docblock line="49">
          <description>Will hold specific mock parameters gained from a route</description>
          <long-description/>
          <tag line="49" name="access" description="public"/>
          <tag line="49" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="63" namespace="global" package="Default">
        <name>$module</name>
        <default>null</default>
        <docblock line="57">
          <description>Will hold the module name which is resolved</description>
          <long-description/>
          <tag line="57" name="access" description="public"/>
          <tag line="57" name="var" description="" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="71" namespace="global" package="Default">
        <name>$uriParams</name>
        <default/>
        <docblock line="65">
          <description>Will hold the URI Params gained from Bwork_Http_Request object</description>
          <long-description/>
          <tag line="65" name="access" description="protected"/>
          <tag line="65" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="78" namespace="global" package="Default">
        <name>$requestUri</name>
        <default/>
        <docblock line="72">
          <description>Will hold the current URI gained from Bwork_Http_Request object</description>
          <long-description/>
          <tag line="72" name="access" description="protected"/>
          <tag line="72" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="87" package="Bwork\Bwork\Router">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="80">
          <description>This function will initialize the routing object and resolve the current URI values</description>
          <long-description/>
          <tag line="80" name="param" description="" type="\Bwork_Http_Request" variable="$requestObject">
            <type by_reference="false">\Bwork_Http_Request</type>
          </tag>
          <tag line="80" name="access" description="public"/>
          <tag line="80" name="return" description="" type="\Bwork_Router_Router">
            <type by_reference="false">\Bwork_Router_Router</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$requestObject</name>
          <default/>
          <type>\Bwork_Http_Request</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="101" package="Bwork\Bwork\Router">
        <name>setHandler</name>
        <full_name>setHandler</full_name>
        <docblock line="93">
          <description>Will attempt to add an inputted handler to the handlers property</description>
          <long-description/>
          <tag line="93" name="param" description="" type="\Bwork_Router_Handler" variable="$handler">
            <type by_reference="false">\Bwork_Router_Handler</type>
          </tag>
          <tag line="93" name="access" description="public"/>
          <tag line="93" name="throws" description="" type="\Bwork_Router_Exception">
            <type by_reference="false">\Bwork_Router_Exception</type>
          </tag>
          <tag line="93" name="return" description="" type="\Bwork_Router_Router">
            <type by_reference="false">\Bwork_Router_Router</type>
          </tag>
        </docblock>
        <argument line="101">
          <name>$handler</name>
          <default/>
          <type>\Bwork_Router_Handler</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="Bwork\Bwork\Router">
        <name>route</name>
        <full_name>route</full_name>
        <docblock line="112">
          <description>This is the main function which will handle the full routing process</description>
          <long-description/>
          <tag line="112" name="access" description="public"/>
          <tag line="112" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="150" package="Bwork\Bwork\Router">
        <name>checkDefaultSegments</name>
        <full_name>checkDefaultSegments</full_name>
        <docblock line="143">
          <description>If there is no specific Route found for the current URI this will attempt to resolve the controller and action in the default way</description>
          <long-description/>
          <tag line="143" name="access" description="private"/>
          <tag line="143" name="throws" description="" type="\Bwork_Router_Exception">
            <type by_reference="false">\Bwork_Router_Exception</type>
          </tag>
          <tag line="143" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="181" package="Bwork\Bwork\Router">
        <name>setDefault</name>
        <full_name>setDefault</full_name>
        <docblock line="173">
          <description>This will attempt to set the default controller an action values as set in a Config file</description>
          <long-description/>
          <tag line="173" name="access" description="public"/>
          <tag line="173" name="access" description="public"/>
          <tag line="173" name="throws" description="" type="\Bwork_Router_Exception">
            <type by_reference="false">\Bwork_Router_Exception</type>
          </tag>
          <tag line="173" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="validation\abstractvalidator.php" hash="619a5956f45b87895c051ecb9a36dbe7" package="Bwork\Bwork\Validation\Validator">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Validation_Validator"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="author" description="Jorik Zweers &lt;jorikzweers[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="22" package="Bwork\Bwork\Validation">
      <extends/>
      <implements>\Bwork_Validation_Validator</implements>
      <name>Bwork_Validation_AbstractValidator</name>
      <full_name>\Bwork_Validation_AbstractValidator</full_name>
      <docblock line="13">
        <description>Abstract Validator</description>
        <long-description>&lt;p&gt;This is the main class for all validators&lt;/p&gt;</long-description>
        <tag line="13" name="package" description="Bwork"/>
        <tag line="13" name="subpackage" description="Bwork_Validation"/>
        <tag line="13" name="version" description="v 0.1"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$input</name>
        <default/>
        <docblock line="26">
          <description>The input key</description>
          <long-description/>
          <tag line="26" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="40" namespace="global" package="Default">
        <name>$input_name</name>
        <default/>
        <docblock line="34">
          <description>The input name</description>
          <long-description/>
          <tag line="34" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="47" namespace="global" package="Default">
        <name>$message</name>
        <default/>
        <docblock line="42">
          <description>The current message</description>
          <long-description/>
          <tag line="42" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="55" namespace="global" package="Default">
        <name>$default_message</name>
        <default/>
        <docblock line="49">
          <description>The default message</description>
          <long-description/>
          <tag line="49" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="63" namespace="global" package="Default">
        <name>$params</name>
        <default>array()</default>
        <docblock line="57">
          <description>The extra params</description>
          <long-description/>
          <tag line="57" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="57" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="Bwork\Bwork\Validation">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="65">
          <description>Constructor</description>
          <long-description/>
          <tag line="65" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$message</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="84" package="Bwork\Bwork\Validation">
        <name>setInput</name>
        <full_name>setInput</full_name>
        <docblock line="77">
          <description>Used to set the input</description>
          <long-description/>
          <tag line="77" name="param" description="" type="string" variable="$input">
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="access" description="public"/>
        </docblock>
        <argument line="84">
          <name>$input</name>
          <default/>
          <type/>
        </argument>
        <argument line="84">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="Bwork\Bwork\Validation">
        <name>getMessage</name>
        <full_name>getMessage</full_name>
        <docblock line="90">
          <description>Used to retrieve the message</description>
          <long-description/>
          <tag line="90" name="access" description="public"/>
          <tag line="90" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="116" package="Bwork\Bwork\Validation">
        <name>setMessage</name>
        <full_name>setMessage</full_name>
        <docblock line="110">
          <description>Used to set the message</description>
          <long-description/>
          <tag line="110" name="access" description="public"/>
          <tag line="110" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="validation\exception.php" hash="f054c3dfbb6e173b8feb399cbf953536" package="Bwork\Bwork\Validation">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Validation"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\Validation">
      <extends>\Exception</extends>
      <name>Bwork_Validation_Exception</name>
      <full_name>\Bwork_Validation_Exception</full_name>
      <docblock line="12">
        <description>Exception</description>
        <long-description>&lt;p&gt;Exception extender for Validation exceptions&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_Validation"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
    </class>
  </file>
  <file path="validation\formvalidation.php" hash="a47cdb2350a3daf9777efcc56720d84f" package="Bwork\Bwork\Validation">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Validation"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="author" description="Jorik Zweers &lt;jorikzweers[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="33" package="Bwork\Bwork\Validation">
      <extends/>
      <implements>\Bwork_Validation_Validation</implements>
      <name>Bwork_Validation_FormValidation</name>
      <full_name>\Bwork_Validation_FormValidation</full_name>
      <docblock line="13">
        <description>Form validation</description>
        <long-description>&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$validator = new Bwork_Validation_FormValidation();
$validator-&gt;add('password', 'User Password', array(
    new Bwork_Validation_Validator_Required(),
    new Bwork_Validation_Validator_MinLength(10)
));

if($validator-&gt;validate()) {
    // code ...
}
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="13" name="package" description="Bwork"/>
        <tag line="13" name="subpackage" description="Bwork_Validation"/>
        <tag line="13" name="version" description="v 0.1"/>
      </docblock>
      <constant namespace="global" line="37" package="Bwork\Bwork\Validation">
        <name>POST</name>
        <full_name>POST</full_name>
        <value>0</value>
      </constant>
      <constant namespace="global" line="38" package="Bwork\Bwork\Validation">
        <name>GET</name>
        <full_name>GET</full_name>
        <value>1</value>
      </constant>
      <property final="false" static="false" visibility="private" line="46" namespace="global" package="Default">
        <name>$form_method</name>
        <default>self::POST</default>
        <docblock line="40">
          <description>Type: POST | GET</description>
          <long-description/>
          <tag line="40" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="40" name="access" description="private"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="54" namespace="global" package="Default">
        <name>$data</name>
        <default>array()</default>
        <docblock line="48">
          <description>Added inputs to validate</description>
          <long-description/>
          <tag line="48" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="48" name="access" description="private"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="62" namespace="global" package="Default">
        <name>$errors</name>
        <default>array()</default>
        <docblock line="56">
          <description>Stores all errors</description>
          <long-description/>
          <tag line="56" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="56" name="access" description="private"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="70" namespace="global" package="Default">
        <name>$messages</name>
        <default>array()</default>
        <docblock line="64">
          <description>Stores all messages</description>
          <long-description/>
          <tag line="64" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="64" name="access" description="private"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="77" package="Bwork\Bwork\Validation">
        <name>setFormMethod</name>
        <full_name>setFormMethod</full_name>
        <docblock line="72">
          <description>This method is used to set the current form method</description>
          <long-description/>
          <tag line="72" name="param" description="" type="int" variable="$form_method">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$form_method</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="90" package="Bwork\Bwork\Validation">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="82">
          <description>This method is used to add an input to be checked</description>
          <long-description/>
          <tag line="82" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="param" description="" type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="param" description="" type="array" variable="$validators">
            <type by_reference="false">array</type>
          </tag>
          <tag line="82" name="return" description="" type="\Bwork_Validation_FormValidation">
            <type by_reference="false">\Bwork_Validation_FormValidation</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="90">
          <name>$label</name>
          <default/>
          <type/>
        </argument>
        <argument line="90">
          <name>$validators</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="116" package="Bwork\Bwork\Validation">
        <name>addString</name>
        <full_name>addString</full_name>
        <docblock line="108">
          <description>This method is used to check an raw string</description>
          <long-description/>
          <tag line="108" name="param" description="" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="108" name="param" description="" type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="108" name="param" description="" type="array" variable="$validators">
            <type by_reference="false">array</type>
          </tag>
          <tag line="108" name="return" description="" type="\Bwork_Validation_FormValidation">
            <type by_reference="false">\Bwork_Validation_FormValidation</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
        <argument line="116">
          <name>$label</name>
          <default/>
          <type/>
        </argument>
        <argument line="116">
          <name>$validators</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="132" package="Bwork\Bwork\Validation">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="127">
          <description>This method is used to validate all inputs</description>
          <long-description/>
          <tag line="127" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="161" package="Bwork\Bwork\Validation">
        <name>getErrorCount</name>
        <full_name>getErrorCount</full_name>
        <docblock line="156">
          <description>This method is used to retrieve the error count</description>
          <long-description/>
          <tag line="156" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="171" package="Bwork\Bwork\Validation">
        <name>getErrors</name>
        <full_name>getErrors</full_name>
        <docblock line="166">
          <description>This method is used to retrieve all errors</description>
          <long-description/>
          <tag line="166" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="182" package="Bwork\Bwork\Validation">
        <name>setMessages</name>
        <full_name>setMessages</full_name>
        <docblock line="176">
          <description>This method is used to set global custom messages</description>
          <long-description/>
          <tag line="176" name="param" description="" type="array" variable="$message_array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="176" name="throws" description="" type="\Bwork_Validation_Exception">
            <type by_reference="false">\Bwork_Validation_Exception</type>
          </tag>
        </docblock>
        <argument line="182">
          <name>$message_array</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="validation\validation.php" hash="f658db008de7ffb4bb8a42d5e440af22" package="Bwork\Bwork\Validation">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Validation"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="author" description="Jorik Zweers &lt;jorikzweers[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <interface namespace="global" line="20" package="Bwork\Bwork\Validation">
      <name>Bwork_Validation_Validation</name>
      <full_name>\Bwork_Validation_Validation</full_name>
      <docblock line="13">
        <description>This is an interface for all form validation classes</description>
        <long-description/>
        <tag line="13" name="package" description="Bwork"/>
        <tag line="13" name="subpackage" description="Bwork_Validation"/>
        <tag line="13" name="version" description="v 0.1"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Bwork\Bwork\Validation">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="22">
          <description>This method is used to add an input to be checked</description>
          <long-description/>
          <tag line="22" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="22" name="param" description="" type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="22" name="param" description="" type="array" variable="$validators">
            <type by_reference="false">array</type>
          </tag>
          <tag line="22" name="return" description="" type="self">
            <type by_reference="false">self</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$label</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$validators</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Bwork\Bwork\Validation">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="32">
          <description>This method is used to validate all inputs</description>
          <long-description/>
          <tag line="32" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="Bwork\Bwork\Validation">
        <name>setMessages</name>
        <full_name>setMessages</full_name>
        <docblock line="39">
          <description>This method is used to set global custom messages</description>
          <long-description/>
          <tag line="39" name="param" description="" type="array" variable="$message_array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$message_array</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
    </interface>
  </file>
  <file path="validation\validator\email.php" hash="072f49553994126b1af9b9fe6b575cb3" package="Bwork\Bwork\Validation\Validator">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Validation_Validator"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="author" description="Jorik Zweers &lt;jorikzweers[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="true" abstract="false" namespace="global" line="22" package="Bwork\Bwork\Validation\Validator">
      <extends>\Bwork_Validation_AbstractValidator</extends>
      <name>Bwork_Validation_Validator_Email</name>
      <full_name>\Bwork_Validation_Validator_Email</full_name>
      <docblock line="13">
        <description>Email Validator</description>
        <long-description>&lt;p&gt;This is used to validate is an email is right&lt;/p&gt;</long-description>
        <tag line="13" name="package" description="Bwork"/>
        <tag line="13" name="subpackage" description="Bwork_Validation_Validator"/>
        <tag line="13" name="version" description="v 0.1"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$default_message</name>
        <default>'[%s] should be a valid email address.'</default>
        <docblock line="26">
          <description>The default message</description>
          <long-description/>
          <tag line="26" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="access" description="protected"/>
          <tag line="26" name="override" description=""/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Bwork\Bwork\Validation\Validator">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="36">
          <description>Constructor</description>
          <long-description/>
          <tag line="36" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="36" name="return" description="" type="\Bwork_Validation_Validator_Email">
            <type by_reference="false">\Bwork_Validation_Validator_Email</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$message</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="52" package="Bwork\Bwork\Validation\Validator">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="47">
          <description>This method is used to execute the validator</description>
          <long-description/>
          <tag line="47" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="validation\validator\maxlength.php" hash="b7932a78c6051dac933d1fc810e10034" package="Bwork\Bwork\Validation\Validator">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Validation_Validator"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="author" description="Jorik Zweers &lt;jorikzweers[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="true" abstract="false" namespace="global" line="22" package="Bwork\Bwork\Validation\Validator">
      <extends>\Bwork_Validation_AbstractValidator</extends>
      <name>Bwork_Validation_Validator_MaxLength</name>
      <full_name>\Bwork_Validation_Validator_MaxLength</full_name>
      <docblock line="13">
        <description>MaxLength</description>
        <long-description>&lt;p&gt;This validator checks if a string exceeds the maximum length&lt;/p&gt;</long-description>
        <tag line="13" name="package" description="Bwork"/>
        <tag line="13" name="subpackage" description="Bwork_Validation_Validator"/>
        <tag line="13" name="version" description="v 0.1"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="32" namespace="global" package="Default">
        <name>$max_length</name>
        <default/>
        <docblock line="26">
          <description>This holds the max length set by the constructor</description>
          <long-description/>
          <tag line="26" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="26" name="access" description="private"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="Bwork\Bwork\Validation\Validator">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="34">
          <description>Constructor</description>
          <long-description/>
          <tag line="34" name="param" description="" type="int" variable="$length">
            <type by_reference="false">int</type>
          </tag>
          <tag line="34" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="return" description="" type="\Bwork_Validation_Validator_MaxLength">
            <type by_reference="false">\Bwork_Validation_Validator_MaxLength</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$length</name>
          <default/>
          <type/>
        </argument>
        <argument line="41">
          <name>$message</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="Bwork\Bwork\Validation\Validator">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="50">
          <description>This method is used to execute the validator</description>
          <long-description/>
          <tag line="50" name="access" description="public"/>
          <tag line="50" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="validation\validator\minlength.php" hash="470c1912cfd9c2dac727eb81ec87c3e0" package="Bwork\Bwork\Validation\Validator">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Validation_Validator"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="author" description="Jorik Zweers &lt;jorikzweers[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="true" abstract="false" namespace="global" line="22" package="Bwork\Bwork\Validation\Validator">
      <extends>\Bwork_Validation_AbstractValidator</extends>
      <name>Bwork_Validation_Validator_MinLength</name>
      <full_name>\Bwork_Validation_Validator_MinLength</full_name>
      <docblock line="13">
        <description>MinLength</description>
        <long-description>&lt;p&gt;This validator checks if the length of a string is long enough.&lt;/p&gt;</long-description>
        <tag line="13" name="package" description="Bwork"/>
        <tag line="13" name="subpackage" description="Bwork_Validation_Validator"/>
        <tag line="13" name="version" description="v 0.1"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="32" namespace="global" package="Default">
        <name>$min_length</name>
        <default/>
        <docblock line="26">
          <description>This holds the min length set by the constructor</description>
          <long-description/>
          <tag line="26" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="26" name="access" description="private"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="Bwork\Bwork\Validation\Validator">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="34">
          <description>Constructor</description>
          <long-description/>
          <tag line="34" name="param" description="" type="int" variable="$length">
            <type by_reference="false">int</type>
          </tag>
          <tag line="34" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="return" description="" type="\Bwork_Validation_Validator_MinLength">
            <type by_reference="false">\Bwork_Validation_Validator_MinLength</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$length</name>
          <default/>
          <type/>
        </argument>
        <argument line="41">
          <name>$message</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="Bwork\Bwork\Validation\Validator">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="50">
          <description>This method is used to execute the validator</description>
          <long-description/>
          <tag line="50" name="access" description="public"/>
          <tag line="50" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="validation\validator\required.php" hash="bf4f4f8b531fff42ad02972db65170b2" package="Bwork\Bwork\Validation\Validator">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Validation_Validator"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="author" description="Jorik Zweers &lt;jorikzweers[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="true" abstract="false" namespace="global" line="22" package="Bwork\Bwork\Validation\Validator">
      <extends>\Bwork_Validation_AbstractValidator</extends>
      <name>Bwork_Validation_Validator_Required</name>
      <full_name>\Bwork_Validation_Validator_Required</full_name>
      <docblock line="13">
        <description>Required</description>
        <long-description>&lt;p&gt;This validator checks the input is set&lt;/p&gt;</long-description>
        <tag line="13" name="package" description="Bwork"/>
        <tag line="13" name="subpackage" description="Bwork_Validation_Validator"/>
        <tag line="13" name="version" description="v 0.1"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$default_message</name>
        <default>'[%s] is required.'</default>
        <docblock line="26">
          <description>The default message</description>
          <long-description/>
          <tag line="26" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="access" description="protected"/>
          <tag line="26" name="override" description=""/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="Bwork\Bwork\Validation\Validator">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="35">
          <description>Constructor</description>
          <long-description/>
          <tag line="35" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="35" name="return" description="" type="\Bwork_Validation_Validator_Required">
            <type by_reference="false">\Bwork_Validation_Validator_Required</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$message</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="52" package="Bwork\Bwork\Validation\Validator">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="46">
          <description>This method is used to execute the validator</description>
          <long-description/>
          <tag line="46" name="access" description="public"/>
          <tag line="46" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="validation\validator.php" hash="3cc06caa4a71c0ef3bccbe528b2704c3" package="Bwork\Bwork\Validation">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_Validation"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="author" description="Jorik Zweers &lt;jorikzweers[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <interface namespace="global" line="22" package="Bwork\Bwork\Validation">
      <name>Bwork_Validation_Validator</name>
      <full_name>\Bwork_Validation_Validator</full_name>
      <docblock line="13">
        <description>Validator</description>
        <long-description>&lt;p&gt;This is the interface for all validators&lt;/p&gt;</long-description>
        <tag line="13" name="package" description="Bwork"/>
        <tag line="13" name="subpackage" description="Bwork_Validation"/>
        <tag line="13" name="version" description="v 0.1"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Bwork\Bwork\Validation">
        <name>setInput</name>
        <full_name>setInput</full_name>
        <docblock line="25">
          <description>This method is used by the form validator to set the current input values</description>
          <long-description/>
          <tag line="25" name="abstract" description=""/>
          <tag line="25" name="param" description="" type="string" variable="$input">
            <type by_reference="false">string</type>
          </tag>
          <tag line="25" name="param" description="" type="string" variable="$input_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="25" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$input</name>
          <default/>
          <type/>
        </argument>
        <argument line="33">
          <name>$input_name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="Bwork\Bwork\Validation">
        <name>getMessage</name>
        <full_name>getMessage</full_name>
        <docblock line="35">
          <description>This method is used to retrieve a message</description>
          <long-description/>
          <tag line="35" name="abstract" description=""/>
          <tag line="35" name="return" description="" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Bwork\Bwork\Validation">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="43">
          <description>This method is used to execute the validator</description>
          <long-description/>
          <tag line="43" name="abstract" description=""/>
          <tag line="43" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="view\default.php" hash="1ba284ea9b92830af59729ce3a07cca2" package="Bwork\Bwork\View">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_View"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <include line="177" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\View">
      <extends/>
      <implements>\Bwork_View_View</implements>
      <name>Bwork_View_Default</name>
      <full_name>\Bwork_View_Default</full_name>
      <docblock line="12">
        <description>Default</description>
        <long-description>&lt;p&gt;This class is used to handle regular view templates&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_View"/>
        <tag line="12" name="version" description="v 0.2"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$view</name>
        <default/>
        <docblock line="24">
          <description>Hold the name of the view file</description>
          <long-description/>
          <tag line="24" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="24" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="global" package="Default">
        <name>$variables</name>
        <default>array()</default>
        <docblock line="32">
          <description>This will hold all variables set by the abstract logic</description>
          <long-description/>
          <tag line="32" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="32" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="48" package="Bwork\Bwork\View">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="40">
          <description>The constructor method that is used to set a specific view file, will
when template param is null use the default values</description>
          <long-description/>
          <tag line="40" name="param" description="" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="40" name="access" description="public"/>
          <tag line="40" name="return" description="" type="\Bwork_View_Default">
            <type by_reference="false">\Bwork_View_Default</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$template</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="69" package="Bwork\Bwork\View">
        <name>setView</name>
        <full_name>setView</full_name>
        <docblock line="60">
          <description>This method attempts to check if a view file exists with support for
module paths.</description>
          <long-description>&lt;p&gt;It only checks on the initialized module gathered from Routing&lt;/p&gt;</long-description>
          <tag line="60" name="access" description="public"/>
          <tag line="60" name="param" description="" type="string" variable="$view">
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="throws" description="" type="\Bwork_View_Exception">
            <type by_reference="false">\Bwork_View_Exception</type>
          </tag>
          <tag line="60" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$view</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="111" package="Bwork\Bwork\View">
        <name>loopThroughLocations</name>
        <full_name>loopThroughLocations</full_name>
        <docblock line="104">
          <description>This function is used to check different locations for a view file and return its filename and path on success</description>
          <long-description/>
          <tag line="104" name="param" description="" type="string" variable="$viewPath">
            <type by_reference="false">string</type>
          </tag>
          <tag line="104" name="param" description="" type="array" variable="$extensions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="104" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="111">
          <name>$viewPath</name>
          <default/>
          <type/>
        </argument>
        <argument line="111">
          <name>$extensions</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="130" package="Bwork\Bwork\View">
        <name>assign</name>
        <full_name>assign</full_name>
        <docblock line="122">
          <description>This will add a key-value pair to the $variables variable</description>
          <long-description/>
          <tag line="122" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="122" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="122" name="access" description="public"/>
          <tag line="122" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="130">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="130">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="143" package="Bwork\Bwork\View">
        <name>assignArray</name>
        <full_name>assignArray</full_name>
        <docblock line="135">
          <description>This will assign variables from an associative array</description>
          <long-description/>
          <tag line="135" name="param" description="" type="array" variable="$variables">
            <type by_reference="false">array</type>
          </tag>
          <tag line="135" name="throws" description="" type="\Bwork_View_Exception">
            <type by_reference="false">\Bwork_View_Exception</type>
          </tag>
          <tag line="135" name="access" description="public"/>
          <tag line="135" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="143">
          <name>$variables</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="161" package="Bwork\Bwork\View">
        <name>getVariables</name>
        <full_name>getVariables</full_name>
        <docblock line="155">
          <description>This will return the $variables variable</description>
          <long-description/>
          <tag line="155" name="access" description="public"/>
          <tag line="155" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="173" package="Bwork\Bwork\View">
        <name>fetch</name>
        <full_name>fetch</full_name>
        <docblock line="166">
          <description>This will include the view template that has been set and will clean all
contents from the page to return</description>
          <long-description/>
          <tag line="166" name="access" description="public"/>
          <tag line="166" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="192" package="Bwork\Bwork\View">
        <name>display</name>
        <full_name>display</full_name>
        <docblock line="186">
          <description>This will imidiatly attempt to display the view template file</description>
          <long-description/>
          <tag line="186" name="access" description="public"/>
          <tag line="186" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="205" package="Bwork\Bwork\View">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="197">
          <description>This is the magic method used from a view to retrieve assigned variables
set in the $variables variable</description>
          <long-description/>
          <tag line="197" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="197" name="access" description="public"/>
          <tag line="197" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="220" package="Bwork\Bwork\View">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="210">
          <description>This is the magic method used when a undifined method is called from a
view file and will attempt to retrieve and execute a helper for this
method</description>
          <long-description/>
          <tag line="210" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="210" name="param" description="" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="210" name="access" description="public"/>
          <tag line="210" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="220">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="220">
          <name>$arguments</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="view\exception.php" hash="6dd0c62c0bb0ba73b76d58b81a3a7efb" package="Bwork\Bwork\View">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_View"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Bwork\Bwork\View">
      <extends>\Exception</extends>
      <name>Bwork_View_Exception</name>
      <full_name>\Bwork_View_Exception</full_name>
      <docblock line="12">
        <description>Exception</description>
        <long-description>&lt;p&gt;Exception extender for View exceptions&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_View"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
    </class>
  </file>
  <file path="view\view.php" hash="9083592c8b7b9cfd9851b9ed52ec6ac0" package="Bwork\Bwork\View">
    <docblock line="2">
      <description>Bwork Framework</description>
      <long-description/>
      <tag line="2" name="package" description="Bwork"/>
      <tag line="2" name="subpackage" description="Bwork_View"/>
      <tag line="2" name="author" description="Bas van Manen &lt;basje1[at]gmail.com&gt;"/>
      <tag line="2" name="version" description="$id: Bwork Framework v 0.1"/>
      <tag line="2" name="license" description="http://creativecommons.org/licenses/by-nc-sa/3.0/"/>
    </docblock>
    <interface namespace="global" line="21" package="Bwork\Bwork\View">
      <name>Bwork_View_View</name>
      <full_name>\Bwork_View_View</full_name>
      <docblock line="12">
        <description>Interface</description>
        <long-description>&lt;p&gt;The interface view handlers&lt;/p&gt;</long-description>
        <tag line="12" name="package" description="Bwork"/>
        <tag line="12" name="subpackage" description="Bwork_View"/>
        <tag line="12" name="version" description="v 0.1"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Bwork\Bwork\View">
        <name>assign</name>
        <full_name>assign</full_name>
        <docblock line="24">
          <description>This method is used to assign variables to save for usage in a view</description>
          <long-description/>
          <tag line="24" name="abstract" description=""/>
          <tag line="24" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="24" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="24" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="32">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="32">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="Bwork\Bwork\View">
        <name>fetch</name>
        <full_name>fetch</full_name>
        <docblock line="34">
          <description>This is the main method to fetch the contents of a view</description>
          <long-description/>
          <tag line="34" name="abstract" description=""/>
          <tag line="34" name="return" description="Content" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="48" package="Bwork\Bwork\View">
        <name>display</name>
        <full_name>display</full_name>
        <docblock line="42">
          <description>This is a method used to instantly attempt to echo the content</description>
          <long-description/>
          <tag line="42" name="abstract" description=""/>
          <tag line="42" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <package name="Bwork" full_name="Bwork">
    <package name="Bwork" full_name="Bwork\Bwork">
      <package name="Bootstrap" full_name="Bwork\Bwork\Bootstrap"/>
      <package name="Config" full_name="Bwork\Bwork\Config"/>
      <package name="Controller" full_name="Bwork\Bwork\Controller"/>
      <package name="Core" full_name="Bwork\Bwork\Core"/>
      <package name="Data" full_name="Bwork\Bwork\Data"/>
      <package name="Exception" full_name="Bwork\Bwork\Exception"/>
      <package name="Helper" full_name="Bwork\Bwork\Helper"/>
      <package name="Http" full_name="Bwork\Bwork\Http"/>
      <package name="Layout" full_name="Bwork\Bwork\Layout"/>
      <package name="Loader" full_name="Bwork\Bwork\Loader"/>
      <package name="Module" full_name="Bwork\Bwork\Module"/>
      <package name="Route" full_name="Bwork\Bwork\Route"/>
      <package name="Router" full_name="Bwork\Bwork\Router">
        <package name="Handler" full_name="Bwork\Bwork\Router\Handler"/>
      </package>
      <package name="Validation" full_name="Bwork\Bwork\Validation">
        <package name="Validator" full_name="Bwork\Bwork\Validation\Validator"/>
      </package>
      <package name="View" full_name="Bwork\Bwork\View"/>
    </package>
  </package>
  <package name="Default" full_name="Default"/>
  <namespace name="global" full_name="global"/>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="1"/>
</project>
